<?xml version="1.0" encoding="utf-8"?>
<testsuites>
  <testsuite id="0" name="cargo test #0" package="testsuite/cargo test #0" tests="25" errors="0" failures="0" hostname="localhost" timestamp="2021-06-11T05:45:53.141454+00:00" time="0">
    <testcase name="bad_parsing" classname="core::package_id_spec::tests" time="0" />
    <testcase name="good_parsing" classname="core::package_id_spec::tests" time="0" />
    <testcase name="invalid_version_handled_nicely" classname="core::package_id::tests" time="0" />
    <testcase name="display" classname="core::package_id::tests" time="0" />
    <testcase name="matching" classname="core::package_id_spec::tests" time="0" />
    <testcase name="debug" classname="core::package_id::tests" time="0" />
    <testcase name="test_canonicalize_cannot_be_a_base_urls" classname="sources::git::source::test" time="0" />
    <testcase name="github_sources_equal" classname="core::source::source_id::tests" time="0" />
    <testcase name="test_canonicalize_idents_different_protocols" classname="sources::git::source::test" time="0" />
    <testcase name="test_canonicalize_idents_by_lowercasing_github_urls" classname="sources::git::source::test" time="0" />
    <testcase name="test_canonicalize_idents_by_stripping_dot_git" classname="sources::git::source::test" time="0" />
    <testcase name="test_canonicalize_idents_by_stripping_trailing_url_slash" classname="sources::git::source::test" time="0" />
    <testcase name="test_url_to_path_ident_with_path" classname="sources::git::source::test" time="0" />
    <testcase name="test_url_to_path_ident_without_path" classname="sources::git::source::test" time="0" />
    <testcase name="no_hyphen" classname="sources::registry::index" time="0" />
    <testcase name="two_hyphen" classname="sources::registry::index" time="0" />
    <testcase name="overflow_hyphen" classname="sources::registry::index" time="0" />
    <testcase name="deep_first" classname="util::dependency_queue::test" time="0" />
    <testcase name="escaped_cher_in_json" classname="sources::registry" time="0" />
    <testcase name="test_progress_status" classname="util::progress" time="0" />
    <testcase name="test_progress_status_percentage" classname="util::progress" time="0" />
    <testcase name="test_progress_status_too_short" classname="util::progress" time="0" />
    <testcase name="with_retry_repeats_the_call_then_works" classname="util::network" time="0" />
    <testcase name="with_retry_finds_nested_spurious_errors" classname="util::network" time="0" />
    <testcase name="test_lev_distance" classname="util::lev_distance" time="0" />
  </testsuite>
  <testsuite id="1" name="cargo test #1" package="testsuite/cargo test #1" tests="1507" errors="0" failures="2" hostname="localhost" timestamp="2021-06-11T05:45:53.141454+00:00" time="0">
    <testcase name="bad_registry_name" classname="alt_registry" time="0" />
    <testcase name="aaa_trigger_cross_compile_disabled_check" classname="" time="0">
      <failure type="cargo test" message="failed ::aaa_trigger_cross_compile_disabled_check"><![CDATA[thread 'aaa_trigger_cross_compile_disabled_check' panicked at 'Cannot cross compile to i686-pc-windows-msvc.

This fail
[...TRUNCATED...]
86-pc-windows-msvc
', tests\testsuite\support\cross_compile.rs:92:5
note: Run with `RUST_BACKTRACE=1` for a backtrace.
]]></failure>
    </testcase>
    <testcase name="alt_reg_metadata" classname="alt_registry" time="0" />
    <testcase name="cannot_publish_to_crates_io_with_registry_dependency" classname="alt_registry" time="0" />
    <testcase name="alt_registry_and_crates_io_deps" classname="alt_registry" time="0" />
    <testcase name="block_publish_due_to_no_token" classname="alt_registry" time="0" />
    <testcase name="depend_on_alt_registry_depends_on_crates_io" classname="alt_registry" time="0" />
    <testcase name="depend_on_alt_registry" classname="alt_registry" time="0" />
    <testcase name="is_feature_gated" classname="alt_registry" time="0" />
    <testcase name="depend_on_alt_registry_depends_on_same_registry" classname="alt_registry" time="0" />
    <testcase name="depend_on_alt_registry_depends_on_same_registry_no_index" classname="alt_registry" time="0" />
    <testcase name="passwords_in_url_forbidden" classname="alt_registry" time="0" />
    <testcase name="patch_alt_reg" classname="alt_registry" time="0" />
    <testcase name="no_api" classname="alt_registry" time="0" />
    <testcase name="publish_to_alt_registry" classname="alt_registry" time="0" />
    <testcase name="registry_incompatible_with_git" classname="alt_registry" time="0" />
    <testcase name="publish_with_crates_io_dep" classname="alt_registry" time="0" />
    <testcase name="registry_and_path_dep_works" classname="alt_registry" time="0" />
    <testcase name="publish_with_registry_dependency" classname="alt_registry" time="0" />
    <testcase name="bad1" classname="bad_config" time="0" />
    <testcase name="bad2" classname="bad_config" time="0" />
    <testcase name="bad4" classname="bad_config" time="0" />
    <testcase name="bad3" classname="bad_config" time="0" />
    <testcase name="bad6" classname="bad_config" time="0" />
    <testcase name="bad_cargo_config_jobs" classname="bad_config" time="0" />
    <testcase name="bad_cargo_lock" classname="bad_config" time="0" />
    <testcase name="bad_debuginfo" classname="bad_config" time="0" />
    <testcase name="bad_dependency" classname="bad_config" time="0" />
    <testcase name="unknown_registry" classname="alt_registry" time="0" />
    <testcase name="bad_git_dependency" classname="bad_config" time="0" />
    <testcase name="bad_crate_type" classname="bad_config" time="0" />
    <testcase name="bad_opt_level" classname="bad_config" time="0" />
    <testcase name="bad_source_config1" classname="bad_config" time="0" />
    <testcase name="bad_source_config2" classname="bad_config" time="0" />
    <testcase name="bad_source_config3" classname="bad_config" time="0" />
    <testcase name="bad_source_config4" classname="bad_config" time="0" />
    <testcase name="bad_dependency_in_lockfile" classname="bad_config" time="0" />
    <testcase name="bad_source_config5" classname="bad_config" time="0" />
    <testcase name="bad_source_config6" classname="bad_config" time="0" />
    <testcase name="bad_source_in_cargo_lock" classname="bad_config" time="0" />
    <testcase name="bad_source_config7" classname="bad_config" time="0" />
    <testcase name="duplicate_bench_names" classname="bad_config" time="0" />
    <testcase name="duplicate_binary_names" classname="bad_config" time="0" />
    <testcase name="duplicate_deps" classname="bad_config" time="0" />
    <testcase name="duplicate_deps_diff_sources" classname="bad_config" time="0" />
    <testcase name="duplicate_example_names" classname="bad_config" time="0" />
    <testcase name="default_cargo_config_jobs" classname="bad_config" time="0" />
    <testcase name="ambiguous_git_reference" classname="bad_config" time="0" />
    <testcase name="duplicate_packages_in_cargo_lock" classname="bad_config" time="0" />
    <testcase name="ignored_git_revision" classname="bad_config" time="0" />
    <testcase name="invalid_global_config" classname="bad_config" time="0" />
    <testcase name="good_cargo_config_jobs" classname="bad_config" time="0" />
    <testcase name="malformed_override" classname="bad_config" time="0" />
    <testcase name="invalid_toml_historically_allowed_is_warned" classname="bad_config" time="0" />
    <testcase name="empty_dependencies" classname="bad_config" time="0" />
    <testcase name="bench_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="bench_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="bench_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="bench_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="build_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="unused_keys_in_virtual_manifest" classname="bad_config" time="0" />
    <testcase name="build_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="build_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="build_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="clean_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="clean_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="clean_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="clean_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="doc_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="doc_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="doc_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="doc_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="fetch_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="fetch_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="both_git_and_path_specified" classname="bad_config" time="0" />
    <testcase name="fetch_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="fetch_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="generate_lockfile_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="generate_lockfile_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="generate_lockfile_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="generate_lockfile_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="package_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="package_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="package_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="package_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="pkgid_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="pkgid_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="pkgid_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="pkgid_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="publish_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="publish_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="publish_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="publish_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="read_manifest_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="read_manifest_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="read_manifest_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="read_manifest_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="run_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="run_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="run_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="run_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="unused_keys" classname="bad_config" time="0" />
    <testcase name="rustc_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="rustc_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="rustc_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="rustc_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="test_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="test_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="test_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="test_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="update_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="update_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="update_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="update_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="verify_project_dir_containing_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="verify_project_dir_plus_file" classname="bad_manifest_path" time="0" />
    <testcase name="verify_project_dir_plus_path" classname="bad_manifest_path" time="0" />
    <testcase name="verify_project_dir_to_nonexistent_cargo_toml" classname="bad_manifest_path" time="0" />
    <testcase name="bench_all_exclude" classname="bench" time="0" />
    <testcase name="bench_all_virtual_manifest" classname="bench" time="0" />
    <testcase name="bench_all_workspace" classname="bench" time="0" />
    <testcase name="bench_autodiscover_2015" classname="bench" time="0" />
    <testcase name="bench_bench_implicit" classname="bench" time="0" />
    <testcase name="bench_bin_implicit" classname="bench" time="0" />
    <testcase name="bench_dylib" classname="bench" time="0" />
    <testcase name="bench_multiple_targets" classname="bench" time="0" />
    <testcase name="bench_tarname" classname="bench" time="0" />
    <testcase name="bench_twice_with_build_cmd" classname="bench" time="0" />
    <testcase name="bench_virtual_manifest_all_implied" classname="bench" time="0" />
    <testcase name="bench_with_deep_lib_dep" classname="bench" time="0" />
    <testcase name="bench_with_examples" classname="bench" time="0" />
    <testcase name="bench_with_lib_dep" classname="bench" time="0" />
    <testcase name="cargo_bench_failing_test" classname="bench" time="0" />
    <testcase name="cargo_bench_simple" classname="bench" time="0" />
    <testcase name="cargo_bench_twice" classname="bench" time="0" />
    <testcase name="dont_run_examples" classname="bench" time="0" />
    <testcase name="cargo_bench_verbose" classname="bench" time="0" />
    <testcase name="external_bench_explicit" classname="bench" time="0" />
    <testcase name="external_bench_implicit" classname="bench" time="0" />
    <testcase name="json_artifact_includes_executable_for_benchmark" classname="bench" time="0" />
    <testcase name="legacy_bench_name" classname="bench" time="0" />
    <testcase name="lib_bin_same_name" classname="bench" time="0" />
    <testcase name="lib_with_standard_name2" classname="bench" time="0" />
    <testcase name="lib_with_standard_name" classname="bench" time="0" />
    <testcase name="many_similar_names" classname="bench" time="0" />
    <testcase name="pass_through_command_line" classname="bench" time="0" />
    <testcase name="test_a_bench" classname="bench" time="0" />
    <testcase name="test_bench_multiple_packages" classname="bench" time="0" />
    <testcase name="test_bench_no_fail_fast" classname="bench" time="0" />
    <testcase name="test_bench_no_run" classname="bench" time="0" />
    <testcase name="bad_cargo_config" classname="build" time="0" />
    <testcase name="bad_platform_specific_dependency" classname="build" time="0" />
    <testcase name="bad_cargo_toml_in_target_dir" classname="build" time="0" />
    <testcase name="all_targets_no_lib" classname="build" time="0" />
    <testcase name="avoid_dev_deps" classname="build" time="0" />
    <testcase name="build_all_exclude" classname="build" time="0" />
    <testcase name="build_all_virtual_manifest" classname="build" time="0" />
    <testcase name="build_all_member_dependency_same_name" classname="build" time="0" />
    <testcase name="build_all_virtual_manifest_implicit_examples" classname="build" time="0" />
    <testcase name="build_all_workspace" classname="build" time="0" />
    <testcase name="build_all_workspace_implicit_examples" classname="build" time="0" />
    <testcase name="build_virtual_manifest_all_implied" classname="build" time="0" />
    <testcase name="build_virtual_manifest_one_project" classname="build" time="0" />
    <testcase name="build_multiple_packages" classname="build" time="0" />
    <testcase name="cargo_build_empty_target" classname="build" time="0" />
    <testcase name="build_with_fake_libc_not_loading" classname="build" time="0" />
    <testcase name="building_a_dependent_crate_witout_bin_should_fail" classname="build" time="0" />
    <testcase name="cargo_compile_manifest_path" classname="build" time="0" />
    <testcase name="cargo_compile_offline_not_try_update" classname="build" time="0" />
    <testcase name="cargo_compile_duplicate_build_targets" classname="build" time="0" />
    <testcase name="build_filter_infer_profile" classname="build" time="0" />
    <testcase name="cargo_compile_with_bin_and_crate_type" classname="build" time="0" />
    <testcase name="cargo_compile_with_bin_and_proc" classname="build" time="0" />
    <testcase name="cargo_compile_incremental" classname="build" time="0" />
    <testcase name="cargo_compile_with_dep_name_mismatch" classname="build" time="0" />
    <testcase name="cargo_compile_with_empty_package_name" classname="build" time="0" />
    <testcase name="cargo_compile_path_with_offline" classname="build" time="0" />
    <testcase name="cargo_compile_with_forbidden_bin_target_name" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_bin_target_name" classname="build" time="0" />
    <testcase name="cargo_compile_simple" classname="build" time="0" />
    <testcase name="cargo_compile_with_filename" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_lib_target_name" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_manifest" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_manifest2" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_manifest3" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_non_numeric_dep_version" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_code" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_package_name" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_code_in_deps" classname="build" time="0" />
    <testcase name="cargo_compile_with_invalid_version" classname="build" time="0" />
    <testcase name="cargo_compile_with_downloaded_dependency_with_offline" classname="build" time="0" />
    <testcase name="cargo_compile_with_nested_deps_inferred" classname="build" time="0" />
    <testcase name="cargo_compile_with_nested_deps_longhand" classname="build" time="0" />
    <testcase name="cargo_compile_with_nested_deps_correct_bin" classname="build" time="0" />
    <testcase name="cargo_compile_with_workspace_excluded" classname="build" time="0" />
    <testcase name="cargo_compile_without_manifest" classname="build" time="0" />
    <testcase name="cargo_compile_with_nested_deps_shorthand" classname="build" time="0" />
    <testcase name="cargo_compile_with_warnings_in_the_root_package" classname="build" time="0" />
    <testcase name="cargo_compile_with_warnings_in_a_dep_package" classname="build" time="0" />
    <testcase name="cargo_fail_with_no_stderr" classname="build" time="0" />
    <testcase name="cargo_platform_specific_dependency_wrong_platform" classname="build" time="0" />
    <testcase name="cargo_default_env_metadata_env_var" classname="build" time="0" />
    <testcase name="cdylib_final_outputs" classname="build" time="0" />
    <testcase name="cdylib_not_lifted" classname="build" time="0" />
    <testcase name="compile_offline_while_transitive_dep_not_cached" classname="build" time="0" />
    <testcase name="cargo_platform_specific_dependency" classname="build" time="0" />
    <testcase name="compile_path_dep_then_change_version" classname="build" time="0" />
    <testcase name="compile_then_delete" classname="build" time="0" />
    <testcase name="compile_offline_without_maxvers_cached" classname="build" time="0" />
    <testcase name="compiler_json_error_format" classname="build" time="0" />
    <testcase name="crate_library_path_env_var" classname="build" time="0" />
    <testcase name="crate_authors_env_vars" classname="build" time="0" />
    <testcase name="cyclic_deps_rejected" classname="build" time="0" />
    <testcase name="dashes_in_crate_name_bad" classname="build" time="0" />
    <testcase name="crate_env_vars" classname="build" time="0" />
    <testcase name="dashes_to_underscores" classname="build" time="0" />
    <testcase name="deletion_causes_failure" classname="build" time="0" />
    <testcase name="dep_no_libs" classname="build" time="0" />
    <testcase name="custom_target_dir_env" classname="build" time="0" />
    <testcase name="dotdir_root" classname="build" time="0" />
    <testcase name="deterministic_cfg_flags" classname="build" time="0" />
    <testcase name="example_as_proc_macro" classname="build" time="0" />
    <testcase name="example_as_dylib" classname="build" time="0" />
    <testcase name="custom_target_dir_line_parameter" classname="build" time="0" />
    <testcase name="example_as_lib" classname="build" time="0" />
    <testcase name="example_as_rlib" classname="build" time="0" />
    <testcase name="explicit_bins_without_paths" classname="build" time="0" />
    <testcase name="example_bin_same_name" classname="build" time="0" />
    <testcase name="explicit_color_config_is_propagated_to_rustc" classname="build" time="0" />
    <testcase name="explicit_examples" classname="build" time="0" />
    <testcase name="filtering" classname="build" time="0" />
    <testcase name="ignore_broken_symlinks" classname="build" time="0" />
    <testcase name="filtering_implicit_bins" classname="build" time="0" />
    <testcase name="filtering_implicit_examples" classname="build" time="0" />
    <testcase name="ignore_dotdirs" classname="build" time="0" />
    <testcase name="ignore_dotfile" classname="build" time="0" />
    <testcase name="freshness_ignores_excluded" classname="build" time="0" />
    <testcase name="ignores_carriage_return_in_lockfile" classname="build" time="0" />
    <testcase name="incompatible_dependencies" classname="build" time="0" />
    <testcase name="incompatible_dependencies_with_multi_semver" classname="build" time="0" />
    <testcase name="implicit_examples" classname="build" time="0" />
    <testcase name="incremental_config" classname="build" time="0" />
    <testcase name="inferred_bin_path" classname="build" time="0" />
    <testcase name="inferred_bins_duplicate_name" classname="build" time="0" />
    <testcase name="inferred_benchmarks" classname="build" time="0" />
    <testcase name="inferred_bins" classname="build" time="0" />
    <testcase name="inferred_examples" classname="build" time="0" />
    <testcase name="invalid_jobs" classname="build" time="0" />
    <testcase name="inferred_main_bin" classname="build" time="0" />
    <testcase name="invalid_spec" classname="build" time="0" />
    <testcase name="incremental_profile" classname="build" time="0" />
    <testcase name="inferred_tests" classname="build" time="0" />
    <testcase name="json_parse_fail" classname="build" time="0" />
    <testcase name="lib_with_standard_name" classname="build" time="0" />
    <testcase name="manifest_with_bom_is_ok" classname="build" time="0" />
    <testcase name="many_crate_types_correct" classname="build" time="0" />
    <testcase name="many_crate_types_old_style_lib_location" classname="build" time="0" />
    <testcase name="legacy_binary_paths_warnings" classname="build" time="0" />
    <testcase name="missing_lib_and_bin" classname="build" time="0" />
    <testcase name="no_bin_in_src_with_lib" classname="build" time="0" />
    <testcase name="message_format_json_forward_stderr" classname="build" time="0" />
    <testcase name="non_existing_binary" classname="build" time="0" />
    <testcase name="non_existing_example" classname="build" time="0" />
    <testcase name="no_warn_about_package_metadata" classname="build" time="0" />
    <testcase name="no_linkable_target" classname="build" time="0" />
    <testcase name="opt_out_of_bin" classname="build" time="0" />
    <testcase name="panic_abort_compiles_with_panic_abort" classname="build" time="0" />
    <testcase name="recompile_space_in_name" classname="build" time="0" />
    <testcase name="lto_build" classname="build" time="0" />
    <testcase name="predictable_filenames" classname="build" time="0" />
    <testcase name="rebuild_preserves_out_dir" classname="build" time="0" />
    <testcase name="release_build_ndebug" classname="build" time="0" />
    <testcase name="run_proper_alias_binary_from_src" classname="build" time="0" />
    <testcase name="run_proper_alias_binary_main_rs" classname="build" time="0" />
    <testcase name="rustc_env_var" classname="build" time="0" />
    <testcase name="rustc_wrapper" classname="build" time="0" />
    <testcase name="run_proper_binary" classname="build" time="0" />
    <testcase name="self_dependency" classname="build" time="0" />
    <testcase name="run_proper_binary_main_rs_as_foo" classname="build" time="0" />
    <testcase name="run_proper_binary_main_rs" classname="build" time="0" />
    <testcase name="simple_staticlib" classname="build" time="0" />
    <testcase name="single_lib" classname="build" time="0" />
    <testcase name="standard_build_no_ndebug" classname="build" time="0" />
    <testcase name="target_edition" classname="build" time="0" />
    <testcase name="same_metadata_different_directory" classname="build" time="0" />
    <testcase name="target_filters_workspace_not_found" classname="build" time="0" />
    <testcase name="staticlib_rlib_and_bin" classname="build" time="0" />
    <testcase name="target_edition_override" classname="build" time="0" />
    <testcase name="targets_selected_all" classname="build" time="0" />
    <testcase name="uplift_dsym_of_bin_on_mac" classname="build" time="0" />
    <testcase name="targets_selected_default" classname="build" time="0" />
    <testcase name="target_filters_workspace" classname="build" time="0" />
    <testcase name="transitive_dependencies_not_available" classname="build" time="0" />
    <testcase name="verbose_build" classname="build" time="0" />
    <testcase name="verbose_release_build" classname="build" time="0" />
    <testcase name="wrong_message_format_option" classname="build" time="0" />
    <testcase name="verbose_release_build_deps" classname="build" time="0" />
    <testcase name="uplift_pdb_of_bin_on_windows" classname="build" time="0" />
    <testcase name="vv_prints_rustc_env_vars" classname="build" time="0" />
    <testcase name="ssh_something_happens" classname="build_auth" time="0" />
    <testcase name="build_with_no_lib" classname="build_lib" time="0" />
    <testcase name="http_auth_offered" classname="build_auth" time="0">
      <failure type="cargo test" message="failed build_auth::http_auth_offered"><![CDATA[running `C:\src\rust-lang\cargo\target\debug\cargo.exe build -v`
running `C:\src\rust-lang\cargo\target\debug\cargo.exe
[...TRUNCATED...]
ed

Caused by:
  failed to acquire username/password from local configuration
', tests\testsuite\support\mod.rs:794:13
]]></failure>
    </testcase>
    <testcase name="build_lib_only" classname="build_lib" time="0" />
    <testcase name="https_something_happens" classname="build_auth" time="0" />
    <testcase name="cargo_build_plan_build_script" classname="build_plan" time="0" />
    <testcase name="build_with_relative_cargo_home_path" classname="build_lib" time="0" />
    <testcase name="cargo_build_plan_simple" classname="build_plan" time="0" />
    <testcase name="build_plan_with_dev_dep" classname="build_plan" time="0" />
    <testcase name="cargo_build_plan_single_dep" classname="build_plan" time="0" />
    <testcase name="adding_an_override_invalidates" classname="build_script" time="0" />
    <testcase name="assume_build_script_when_build_rs_present" classname="build_script" time="0" />
    <testcase name="build_script_only" classname="build_script" time="0" />
    <testcase name="build_deps_not_for_normal" classname="build_script" time="0" />
    <testcase name="build_cmd_with_a_build_cmd" classname="build_script" time="0" />
    <testcase name="build_deps_simple" classname="build_script" time="0" />
    <testcase name="build_script_with_lto" classname="build_script" time="0" />
    <testcase name="cfg_feedback" classname="build_script" time="0" />
    <testcase name="cfg_env_vars_available" classname="build_script" time="0" />
    <testcase name="build_script_with_dynamic_native_dependency" classname="build_script" time="0" />
    <testcase name="cfg_override" classname="build_script" time="0" />
    <testcase name="cfg_override_test" classname="build_script" time="0" />
    <testcase name="cfg_test" classname="build_script" time="0" />
    <testcase name="custom_build_env_var_rustc_linker" classname="build_script" time="0" />
    <testcase name="changing_an_override_invalidates" classname="build_script" time="0" />
    <testcase name="cfg_doc" classname="build_script" time="0" />
    <testcase name="custom_build_script_failed" classname="build_script" time="0" />
    <testcase name="custom_build_script_wrong_rustc_flags" classname="build_script" time="0" />
    <testcase name="custom_build_env_vars" classname="build_script" time="0" />
    <testcase name="cfg_override_doc" classname="build_script" time="0" />
    <testcase name="custom_target_dir" classname="build_script" time="0" />
    <testcase name="diamond_passes_args_only_once" classname="build_script" time="0" />
    <testcase name="deterministic_rustc_dependency_flags" classname="build_script" time="0" />
    <testcase name="env_build" classname="build_script" time="0" />
    <testcase name="doctest_receives_build_link_args" classname="build_script" time="0" />
    <testcase name="fresh_builds_possible_with_link_libs" classname="build_script" time="0" />
    <testcase name="fresh_builds_possible_with_multiple_metadata_overrides" classname="build_script" time="0" />
    <testcase name="env_test" classname="build_script" time="0" />
    <testcase name="links_duplicates" classname="build_script" time="0" />
    <testcase name="links_duplicates_deep_dependency" classname="build_script" time="0" />
    <testcase name="links_duplicates_with_cycle" classname="build_script" time="0" />
    <testcase name="flags_go_into_tests" classname="build_script" time="0" />
    <testcase name="if_build_set_to_false_dont_treat_build_rs_as_build_script" classname="build_script" time="0" />
    <testcase name="links_no_build_cmd" classname="build_script" time="0" />
    <testcase name="env_doc" classname="build_script" time="0" />
    <testcase name="links_with_dots" classname="build_script" time="0" />
    <testcase name="links_passes_env_vars" classname="build_script" time="0" />
    <testcase name="non_utf8_output" classname="build_script" time="0" />
    <testcase name="only_rerun_build_script" classname="build_script" time="0" />
    <testcase name="output_separate_lines" classname="build_script" time="0" />
    <testcase name="optional_build_dep_and_required_normal_dep" classname="build_script" time="0" />
    <testcase name="out_dir_is_preserved" classname="build_script" time="0" />
    <testcase name="optional_build_script_dep" classname="build_script" time="0" />
    <testcase name="output_separate_lines_new" classname="build_script" time="0" />
    <testcase name="output_shows_on_vv" classname="build_script" time="0" />
    <testcase name="overrides_and_links" classname="build_script" time="0" />
    <testcase name="please_respect_the_dag" classname="build_script" time="0" />
    <testcase name="profile_debug_0" classname="build_script" time="0" />
    <testcase name="profile_and_opt_level_set_correctly" classname="build_script" time="0" />
    <testcase name="propagation_of_l_flags" classname="build_script" time="0" />
    <testcase name="panic_abort_with_build_scripts" classname="build_script" time="0" />
    <testcase name="propagation_of_l_flags_new" classname="build_script" time="0" />
    <testcase name="rebuild_continues_to_pass_env_vars" classname="build_script" time="0" />
    <testcase name="rename_with_link_search_path_cross" classname="build_script" time="0" />
    <testcase name="release_with_build_script" classname="build_script" time="0" />
    <testcase name="rustc_and_rustdoc_set_correctly" classname="build_script" time="0" />
    <testcase name="shared_dep_with_a_build_script" classname="build_script" time="0" />
    <testcase name="rename_with_link_search_path" classname="build_script" time="0" />
    <testcase name="rebuild_only_on_explicit_paths" classname="build_script" time="0" />
    <testcase name="test_dev_dep_build_script" classname="build_script" time="0" />
    <testcase name="switch_features_rerun" classname="build_script" time="0" />
    <testcase name="test_a_lib_with_a_build_command" classname="build_script" time="0" />
    <testcase name="test_duplicate_deps" classname="build_script" time="0" />
    <testcase name="unused_overrides" classname="build_script" time="0" />
    <testcase name="warnings_emitted" classname="build_script" time="0" />
    <testcase name="transitive_dep_host" classname="build_script" time="0" />
    <testcase name="warnings_hidden_for_upstream" classname="build_script" time="0" />
    <testcase name="warnings_printed_on_vv" classname="build_script" time="0" />
    <testcase name="alias_cannot_shadow_builtin_command" classname="cargo_alias_config" time="0" />
    <testcase name="rerun_if_env_changes" classname="build_script_env" time="0" />
    <testcase name="alias_incorrect_config_type" classname="cargo_alias_config" time="0" />
    <testcase name="testing_and_such" classname="build_script" time="0" />
    <testcase name="alias_config" classname="cargo_alias_config" time="0" />
    <testcase name="alias_list_test" classname="cargo_alias_config" time="0" />
    <testcase name="alias_override_builtin_alias" classname="cargo_alias_config" time="0" />
    <testcase name="alias_with_flags_config" classname="cargo_alias_config" time="0" />
    <testcase name="rerun_if_env_or_file_changes" classname="build_script_env" time="0" />
    <testcase name="cargo_help" classname="cargo_command" time="0" />
    <testcase name="recursive_alias" classname="cargo_alias_config" time="0" />
    <testcase name="builtin_alias_takes_options" classname="cargo_alias_config" time="0" />
    <testcase name="displays_subcommand_on_error" classname="cargo_command" time="0" />
    <testcase name="explain" classname="cargo_command" time="0" />
    <testcase name="cargo_subcommand_args" classname="cargo_command" time="0" />
    <testcase name="find_closest_dont_correct_nonsense" classname="cargo_command" time="0" />
    <testcase name="cargo_subcommand_env" classname="cargo_command" time="0" />
    <testcase name="list_command_looks_at_path" classname="cargo_command" time="0" />
    <testcase name="list_commands_with_descriptions" classname="cargo_command" time="0" />
    <testcase name="override_cargo_home" classname="cargo_command" time="0" />
    <testcase name="z_flags_help" classname="cargo_command" time="0" />
    <testcase name="cargo_help_external_subcommand" classname="cargo_command" time="0" />
    <testcase name="feature_required" classname="cargo_features" time="0" />
    <testcase name="cant_publish" classname="cargo_features" time="0" />
    <testcase name="nightly_feature_requires_nightly" classname="cargo_features" time="0" />
    <testcase name="nightly_feature_requires_nightly_in_dep" classname="cargo_features" time="0" />
    <testcase name="find_closest_biuld_to_build" classname="cargo_command" time="0" />
    <testcase name="unknown_feature" classname="cargo_features" time="0" />
    <testcase name="stable_feature_warns" classname="cargo_features" time="0" />
    <testcase name="bad_target_spec" classname="cfg" time="0" />
    <testcase name="bad_target_spec2" classname="cfg" time="0" />
    <testcase name="z_flags_rejected" classname="cargo_features" time="0" />
    <testcase name="cfg_expr" classname="cfg" time="0" />
    <testcase name="cfg_expr_bad" classname="cfg" time="0" />
    <testcase name="cfg_matches" classname="cfg" time="0" />
    <testcase name="publish_allowed" classname="cargo_features" time="0" />
    <testcase name="cfg_syntax" classname="cfg" time="0" />
    <testcase name="cfg_syntax_bad" classname="cfg" time="0" />
    <testcase name="any_ok" classname="cfg" time="0" />
    <testcase name="cfg_easy" classname="cfg" time="0" />
    <testcase name="dont_include" classname="cfg" time="0" />
    <testcase name="multiple_match_ok" classname="cfg" time="0" />
    <testcase name="ignore_version_from_other_platform" classname="cfg" time="0" />
    <testcase name="check_all" classname="check" time="0" />
    <testcase name="build_check" classname="check" time="0" />
    <testcase name="works_through_the_registry" classname="cfg" time="0" />
    <testcase name="check_fail" classname="check" time="0" />
    <testcase name="check_build" classname="check" time="0" />
    <testcase name="check_success" classname="check" time="0" />
    <testcase name="check_unit_test_profile" classname="check" time="0" />
    <testcase name="check_virtual_all_implied" classname="check" time="0" />
    <testcase name="does_not_use_empty_rustc_wrapper" classname="check" time="0" />
    <testcase name="custom_derive" classname="check" time="0" />
    <testcase name="check_artifacts" classname="check" time="0" />
    <testcase name="check_filters" classname="check" time="0" />
    <testcase name="dylib_check_preserves_build_cache" classname="check" time="0" />
    <testcase name="issue_3418" classname="check" time="0" />
    <testcase name="issue_3419" classname="check" time="0" />
    <testcase name="rustc_check" classname="check" time="0" />
    <testcase name="proc_macro" classname="check" time="0" />
    <testcase name="rustc_check_err" classname="check" time="0" />
    <testcase name="short_message_format" classname="check" time="0" />
    <testcase name="targets_selected_all" classname="check" time="0" />
    <testcase name="error_from_deep_recursion" classname="check" time="0" />
    <testcase name="targets_selected_default" classname="check" time="0" />
    <testcase name="cargo_clean_simple" classname="clean" time="0" />
    <testcase name="clean_multiple_packages" classname="clean" time="0" />
    <testcase name="build_script" classname="clean" time="0" />
    <testcase name="clean_git" classname="clean" time="0" />
    <testcase name="different_dir" classname="clean" time="0" />
    <testcase name="clean_verbose" classname="clean" time="0" />
    <testcase name="clean_release" classname="clean" time="0" />
    <testcase name="collision_example" classname="collisions" time="0" />
    <testcase name="registry" classname="clean" time="0" />
    <testcase name="collision_dylib" classname="collisions" time="0" />
    <testcase name="clean_doc" classname="clean" time="0" />
    <testcase name="collision_export" classname="collisions" time="0" />
    <testcase name="concurrent_installs" classname="concurrent" time="0" />
    <testcase name="concurrent::killing_cargo_releases_the_lock" time="0">
      <skipped />
    </testcase>
    <testcase name="debug_release_ok" classname="concurrent" time="0" />
    <testcase name="multiple_installs" classname="concurrent" time="0" />
    <testcase name="git_same_repo_different_tags" classname="concurrent" time="0" />
    <testcase name="git_same_branch_different_revs" classname="concurrent" time="0" />
    <testcase name="one_install_should_be_bad" classname="concurrent" time="0" />
    <testcase name="config_bad_toml" classname="config" time="0" />
    <testcase name="config_deserialize_any" classname="config" time="0" />
    <testcase name="config_get_integers" classname="config" time="0" />
    <testcase name="config_get_list" classname="config" time="0" />
    <testcase name="config_get_option" classname="config" time="0" />
    <testcase name="config_get_other_types" classname="config" time="0" />
    <testcase name="config_load_toml_profile" classname="config" time="0" />
    <testcase name="config_relative_path" classname="config" time="0" />
    <testcase name="config_toml_errors" classname="config" time="0" />
    <testcase name="config_unused_fields" classname="config" time="0" />
    <testcase name="get_config" classname="config" time="0" />
    <testcase name="get_errors" classname="config" time="0" />
    <testcase name="same_project" classname="concurrent" time="0" />
    <testcase name="load_nested" classname="config" time="0" />
    <testcase name="no_deadlock_with_git_dependencies" classname="concurrent" time="0" />
    <testcase name="multiple_registry_fetches" classname="concurrent" time="0" />
    <testcase name="build_deps_for_the_right_arch" classname="cross_compile" time="0" />
    <testcase name="build_script_needed_for_host_and_target" classname="cross_compile" time="0" />
    <testcase name="build_script_only_host" classname="cross_compile" time="0" />
    <testcase name="build_script_with_platform_specific_dependencies" classname="cross_compile" time="0" />
    <testcase name="cross_test_dylib" classname="cross_compile" time="0" />
    <testcase name="cross_tests" classname="cross_compile" time="0" />
    <testcase name="cross_with_a_build_script" classname="cross_compile" time="0" />
    <testcase name="linker_and_ar" classname="cross_compile" time="0" />
    <testcase name="no_cross_doctests" classname="cross_compile" time="0" />
    <testcase name="platform_specific_dependencies_do_not_leak" classname="cross_compile" time="0" />
    <testcase name="platform_specific_variables_reflected_in_build_scripts" classname="cross_compile" time="0" />
    <testcase name="plugin_build_script_right_arch" classname="cross_compile" time="0" />
    <testcase name="plugin_deps" classname="cross_compile" time="0" />
    <testcase name="plugin_to_the_max" classname="cross_compile" time="0" />
    <testcase name="plugin_with_extra_dylib_dep" classname="cross_compile" time="0" />
    <testcase name="simple_cargo_run" classname="cross_compile" time="0" />
    <testcase name="simple_cross" classname="cross_compile" time="0" />
    <testcase name="simple_cross_config" classname="cross_compile" time="0" />
    <testcase name="simple_deps" classname="cross_compile" time="0" />
    <testcase name="publish_with_target" classname="cross_publish" time="0" />
    <testcase name="simple_cross_package" classname="cross_publish" time="0" />
    <testcase name="custom_target_dependency" classname="custom_target" time="0" />
    <testcase name="custom_target_minimal" classname="custom_target" time="0" />
    <testcase name="read_env_vars_for_config" classname="config" time="0" />
    <testcase name="build_dep_info" classname="dep_info" time="0" />
    <testcase name="ctrl_c_kills_everyone" classname="death" time="0" />
    <testcase name="deleting_database_files" classname="corrupt_git" time="0" />
    <testcase name="build_dep_info_lib" classname="dep_info" time="0" />
    <testcase name="build_dep_info_dylib" classname="dep_info" time="0" />
    <testcase name="deleting_checkout_files" classname="corrupt_git" time="0" />
    <testcase name="bad_file_checksum" classname="directory" time="0" />
    <testcase name="build_dep_info_rlib" classname="dep_info" time="0" />
    <testcase name="no_rewrite_if_no_change" classname="dep_info" time="0" />
    <testcase name="git_override_requires_lockfile" classname="directory" time="0" />
    <testcase name="crates_io_then_bad_checksum" classname="directory" time="0" />
    <testcase name="git_lock_file_doesnt_change" classname="directory" time="0" />
    <testcase name="install_without_feature_dep" classname="directory" time="0" />
    <testcase name="not_there" classname="directory" time="0" />
    <testcase name="crates_io_then_directory" classname="directory" time="0" />
    <testcase name="multiple" classname="directory" time="0" />
    <testcase name="only_dot_files_ok" classname="directory" time="0" />
    <testcase name="random_files_ok" classname="directory" time="0" />
    <testcase name="simple_install_fail" classname="directory" time="0" />
    <testcase name="simple" classname="directory" time="0" />
    <testcase name="version_missing" classname="directory" time="0" />
    <testcase name="doc_all_member_dependency_same_name" classname="doc" time="0" />
    <testcase name="simple_install" classname="directory" time="0" />
    <testcase name="doc_cap_lints" classname="doc" time="0" />
    <testcase name="workspace_different_locations" classname="directory" time="0" />
    <testcase name="doc_all_virtual_manifest" classname="doc" time="0" />
    <testcase name="doc_edition" classname="doc" time="0" />
    <testcase name="doc_all_workspace" classname="doc" time="0" />
    <testcase name="doc_lib_bin_same_name_documents_bins_when_requested" classname="doc" time="0" />
    <testcase name="doc_dash_p" classname="doc" time="0" />
    <testcase name="doc_deps" classname="doc" time="0" />
    <testcase name="doc_message_format" classname="doc" time="0" />
    <testcase name="doc_lib_bin_same_name_documents_lib" classname="doc" time="0" />
    <testcase name="doc_lib_bin_same_name_documents_lib_when_requested" classname="doc" time="0" />
    <testcase name="doc_multiple_targets_same_name_bin" classname="doc" time="0" />
    <testcase name="doc_multiple_targets_same_name_lib" classname="doc" time="0" />
    <testcase name="doc_lib_bin_same_name_documents_named_bin_when_requested" classname="doc" time="0" />
    <testcase name="doc_multiple_deps" classname="doc" time="0" />
    <testcase name="doc_no_libs" classname="doc" time="0" />
    <testcase name="doc_multiple_targets_same_name" classname="doc" time="0" />
    <testcase name="doc_multiple_targets_same_name_undoced" classname="doc" time="0" />
    <testcase name="doc_no_deps" classname="doc" time="0" />
    <testcase name="doc_private_items" classname="doc" time="0" />
    <testcase name="doc_private_ws" classname="doc" time="0" />
    <testcase name="doc_release" classname="doc" time="0" />
    <testcase name="doc_target_edition" classname="doc" time="0" />
    <testcase name="doc_target" classname="doc" time="0" />
    <testcase name="doc_only_bin" classname="doc" time="0" />
    <testcase name="doc_same_name" classname="doc" time="0" />
    <testcase name="doc_twice" classname="doc" time="0" />
    <testcase name="doc_virtual_manifest_all_implied" classname="doc" time="0" />
    <testcase name="doc_workspace_open_help_message" classname="doc" time="0" />
    <testcase name="document_only_lib" classname="doc" time="0" />
    <testcase name="no_document_build_deps" classname="doc" time="0" />
    <testcase name="plugins_no_use_target" classname="doc" time="0" />
    <testcase name="features" classname="doc" time="0" />
    <testcase name="short_message_format" classname="doc" time="0" />
    <testcase name="issue_5345" classname="doc" time="0" />
    <testcase name="output_not_captured" classname="doc" time="0" />
    <testcase name="rerun_when_dir_removed" classname="doc" time="0" />
    <testcase name="edition_works_for_build_script" classname="edition" time="0" />
    <testcase name="simple" classname="doc" time="0" />
    <testcase name="activating_feature_activates_dep" classname="features" time="0" />
    <testcase name="target_specific_not_documented" classname="doc" time="0" />
    <testcase name="all_features_all_crates" classname="features" time="0" />
    <testcase name="cyclic_feature" classname="features" time="0" />
    <testcase name="all_features_flag_enables_all_features" classname="features" time="0" />
    <testcase name="cyclic_feature2" classname="features" time="0" />
    <testcase name="target_specific_documented" classname="doc" time="0" />
    <testcase name="combining_features_and_package" classname="features" time="0" />
    <testcase name="everything_in_the_lockfile" classname="features" time="0" />
    <testcase name="empty_features" classname="features" time="0" />
    <testcase name="default_feature_pulled_in" classname="features" time="0" />
    <testcase name="invalid1" classname="features" time="0" />
    <testcase name="dep_feature_in_cmd_line" classname="features" time="0" />
    <testcase name="invalid2" classname="features" time="0" />
    <testcase name="invalid3" classname="features" time="0" />
    <testcase name="groups_on_groups_on_groups" classname="features" time="0" />
    <testcase name="invalid4" classname="features" time="0" />
    <testcase name="invalid5" classname="features" time="0" />
    <testcase name="invalid6" classname="features" time="0" />
    <testcase name="invalid7" classname="features" time="0" />
    <testcase name="invalid8" classname="features" time="0" />
    <testcase name="invalid10" classname="features" time="0" />
    <testcase name="feature_off_dylib" classname="features" time="0" />
    <testcase name="invalid9" classname="features" time="0" />
    <testcase name="many_cli_features" classname="features" time="0" />
    <testcase name="many_cli_features_comma_and_space_delimited" classname="features" time="0" />
    <testcase name="namespaced_implicit_non_optional" classname="features" time="0" />
    <testcase name="many_cli_features_comma_delimited" classname="features" time="0" />
    <testcase name="namespaced_invalid_dependency" classname="features" time="0" />
    <testcase name="namespaced_invalid_feature" classname="features" time="0" />
    <testcase name="namespaced_non_optional_dependency" classname="features" time="0" />
    <testcase name="namespaced_shadowed_dep" classname="features" time="0" />
    <testcase name="namespaced_shadowed_non_optional" classname="features" time="0" />
    <testcase name="namespaced_implicit_feature" classname="features" time="0" />
    <testcase name="many_features_no_rebuilds" classname="features" time="0" />
    <testcase name="no_transitive_dep_feature_requirement" classname="features" time="0" />
    <testcase name="namespaced_same_name" classname="features" time="0" />
    <testcase name="optional_and_dev_dep" classname="features" time="0" />
    <testcase name="no_rebuild_when_frobbing_default_feature" classname="features" time="0" />
    <testcase name="no_feature_doesnt_build" classname="features" time="0" />
    <testcase name="only_dep_is_optional" classname="features" time="0" />
    <testcase name="transitive_features" classname="features" time="0" />
    <testcase name="fetch_all_platform_dependencies_when_no_target_is_given" classname="fetch" time="0" />
    <testcase name="fetch_platform_specific_dependencies" classname="fetch" time="0" />
    <testcase name="no_deps" classname="fetch" time="0" />
    <testcase name="union_features" classname="features" time="0" />
    <testcase name="both_edition_migrate_flags" classname="fix" time="0" />
    <testcase name="unions_work_with_no_default_features" classname="features" time="0" />
    <testcase name="warn_if_default_features" classname="features" time="0" />
    <testcase name="does_not_crash_with_rustc_wrapper" classname="fix" time="0" />
    <testcase name="do_not_fix_non_relevant_deps" classname="fix" time="0" />
    <testcase name="do_not_fix_broken_builds" classname="fix" time="0" />
    <testcase name="does_not_warn_about_clean_working_directory" classname="fix" time="0" />
    <testcase name="does_not_warn_about_dirty_ignored_files" classname="fix" time="0" />
    <testcase name="fix_all_targets_by_default" classname="fix" time="0" />
    <testcase name="doesnt_rebuild_dependencies" classname="fix" time="0" />
    <testcase name="broken_fixes_backed_out" classname="fix" time="0" />
    <testcase name="fix_broken_if_requested" classname="fix" time="0" />
    <testcase name="fix_deny_warnings" classname="fix" time="0" />
    <testcase name="fix_idioms" classname="fix" time="0" />
    <testcase name="fix_overlapping" classname="fix" time="0" />
    <testcase name="fix_to_broken_code" classname="fix" time="0" />
    <testcase name="fix_deny_warnings_but_not_others" classname="fix" time="0" />
    <testcase name="fix_two_files" classname="fix" time="0" />
    <testcase name="fix_path_deps" classname="fix" time="0" />
    <testcase name="fix_with_common" classname="fix" time="0" />
    <testcase name="fix_features" classname="fix" time="0" />
    <testcase name="fixes_extra_mut" classname="fix" time="0" />
    <testcase name="local_paths" classname="fix" time="0" />
    <testcase name="fixes_two_missing_ampersands" classname="fix" time="0" />
    <testcase name="idioms_2015_ok" classname="fix" time="0" />
    <testcase name="prepare_for_2018" classname="fix" time="0" />
    <testcase name="no_changes_necessary" classname="fix" time="0" />
    <testcase name="prepare_for_and_enable" classname="fix" time="0" />
    <testcase name="only_warn_for_relevant_crates" classname="fix" time="0" />
    <testcase name="preserve_line_endings" classname="fix" time="0" />
    <testcase name="shows_warnings" classname="fix" time="0" />
    <testcase name="specify_rustflags" classname="fix" time="0" />
    <testcase name="shows_warnings_on_second_run_without_changes" classname="fix" time="0" />
    <testcase name="tricky" classname="fix" time="0" />
    <testcase name="upgrade_extern_crate" classname="fix" time="0" />
    <testcase name="warns_about_dirty_working_directory" classname="fix" time="0" />
    <testcase name="fixes_missing_ampersand" classname="fix" time="0" />
    <testcase name="warns_about_staged_working_directory" classname="fix" time="0" />
    <testcase name="shows_warnings_on_second_run_without_changes_on_multiple_targets" classname="fix" time="0" />
    <testcase name="warns_if_no_vcs_detected" classname="fix" time="0" />
    <testcase name="change_panic_mode" classname="freshness" time="0" />
    <testcase name="bust_patched_dep" classname="freshness" time="0" />
    <testcase name="changing_bin_features_caches_targets" classname="freshness" time="0" />
    <testcase name="changing_lib_features_caches_targets" classname="freshness" time="0" />
    <testcase name="changing_rustflags_is_cached" classname="freshness" time="0" />
    <testcase name="changing_profiles_caches_targets" classname="freshness" time="0" />
    <testcase name="dont_rebuild_based_on_plugins" classname="freshness" time="0" />
    <testcase name="fingerprint_cleaner_does_not_rebuild" classname="freshness" time="0" />
    <testcase name="modifying_and_moving" classname="freshness" time="0" />
    <testcase name="no_rebuild_if_build_artifacts_move_backwards_in_time" classname="freshness" time="0" />
    <testcase name="changing_bin_paths_common_target_features_caches_targets" classname="freshness" time="0" />
    <testcase name="no_rebuild_when_rename_dir" classname="freshness" time="0" />
    <testcase name="modify_only_some_files" classname="freshness" time="0" />
    <testcase name="no_rebuild_transitive_target_deps" classname="freshness" time="0" />
    <testcase name="path_dev_dep_registry_updates" classname="freshness" time="0" />
    <testcase name="rebuild_if_build_artifacts_move_forward_in_time" classname="freshness" time="0" />
    <testcase name="rebuild_if_environment_changes" classname="freshness" time="0" />
    <testcase name="rebuild_sub_package_then_while_package" classname="freshness" time="0" />
    <testcase name="rebuild_on_mid_build_file_modification" classname="freshness" time="0" />
    <testcase name="rerun_if_changed_in_dep" classname="freshness" time="0" />
    <testcase name="reuse_panic_build_dep_test" classname="freshness" time="0" />
    <testcase name="reuse_panic_pm" classname="freshness" time="0" />
    <testcase name="reuse_shared_build_dep" classname="freshness" time="0" />
    <testcase name="rebuild_tests_if_lib_changes" classname="freshness" time="0" />
    <testcase name="reuse_workspace_lib" classname="freshness" time="0" />
    <testcase name="same_build_dir_cached_packages" classname="freshness" time="0" />
    <testcase name="adding_and_removing_packages" classname="generate_lockfile" time="0" />
    <testcase name="cargo_update_generate_lockfile" classname="generate_lockfile" time="0" />
    <testcase name="duplicate_entries_in_lockfile" classname="generate_lockfile" time="0" />
    <testcase name="preserve_line_endings_issue_2076" classname="generate_lockfile" time="0" />
    <testcase name="unused_optional_dep" classname="freshness" time="0" />
    <testcase name="no_index_update" classname="generate_lockfile" time="0" />
    <testcase name="cargo_compile_forbird_git_httpsrepo_offline" classname="git" time="0" />
    <testcase name="simple_deps_cleaner_does_not_rebuild" classname="freshness" time="0" />
    <testcase name="preserve_metadata" classname="generate_lockfile" time="0" />
    <testcase name="add_a_git_dep" classname="git" time="0" />
    <testcase name="cargo_compile_git_dep_branch" classname="git" time="0" />
    <testcase name="cargo_compile_git_dep_tag" classname="git" time="0" />
    <testcase name="cargo_compile_simple_git_dep" classname="git" time="0" />
    <testcase name="cargo_compile_with_malformed_nested_paths" classname="git" time="0" />
    <testcase name="cargo_compile_with_meta_package" classname="git" time="0" />
    <testcase name="cargo_compile_with_short_ssh_git" classname="git" time="0" />
    <testcase name="dep_with_bad_submodule" classname="git" time="0" />
    <testcase name="denied_lints_are_allowed" classname="git" time="0" />
    <testcase name="cargo_compile_with_nested_paths" classname="git" time="0" />
    <testcase name="cargo_compile_offline_with_cached_git_dep" classname="git" time="0" />
    <testcase name="dep_with_submodule" classname="git" time="0" />
    <testcase name="dev_deps_with_testing" classname="git" time="0" />
    <testcase name="doctest_same_name" classname="git" time="0" />
    <testcase name="dont_require_submodules_are_checked_out" classname="git" time="0" />
    <testcase name="failed_submodule_checkout" classname="git" time="0" />
    <testcase name="fetch_downloads" classname="git" time="0" />
    <testcase name="dep_with_changed_submodule" classname="git" time="0" />
    <testcase name="git_name_not_always_needed" classname="git" time="0" />
    <testcase name="git::include_overrides_gitignore" time="0">
      <skipped />
    </testcase>
    <testcase name="invalid_git_dependency_manifest" classname="git" time="0" />
    <testcase name="git_build_cmd_freshness" classname="git" time="0" />
    <testcase name="git_dep_build_cmd" classname="git" time="0" />
    <testcase name="lints_are_suppressed" classname="git" time="0" />
    <testcase name="git_repo_changing_no_rebuild" classname="git" time="0" />
    <testcase name="switch_deps_does_not_update_transitive" classname="git" time="0" />
    <testcase name="stale_cached_version" classname="git" time="0" />
    <testcase name="recompilation" classname="git" time="0" />
    <testcase name="switch_sources" classname="git" time="0" />
    <testcase name="templatedir_doesnt_cause_problems" classname="git" time="0" />
    <testcase name="two_at_rev_instead_of_tag" classname="git" time="0" />
    <testcase name="update_one_dep_in_repo_with_many_deps" classname="git" time="0" />
    <testcase name="two_deps_only_update_one" classname="git" time="0" />
    <testcase name="two_revs_same_deps" classname="git" time="0" />
    <testcase name="update_ambiguous" classname="git" time="0" />
    <testcase name="update_one_source_updates_all_packages_in_that_git_source" classname="git" time="0" />
    <testcase name="warnings_in_git_dep" classname="git" time="0" />
    <testcase name="bin_already_exists_explicit" classname="init" time="0" />
    <testcase name="auto_git" classname="init" time="0" />
    <testcase name="bin_already_exists_explicit_nosrc" classname="init" time="0" />
    <testcase name="bin_already_exists_implicit" classname="init" time="0" />
    <testcase name="bin_already_exists_implicit_namenosrc" classname="init" time="0" />
    <testcase name="bin_already_exists_implicit_namesrc" classname="init" time="0" />
    <testcase name="both_lib_and_bin" classname="init" time="0" />
    <testcase name="bin_already_exists_implicit_nosrc" classname="init" time="0" />
    <testcase name="use_the_cli" classname="git" time="0" />
    <testcase name="cargo_lock_gitignored_if_lib1" classname="init" time="0" />
    <testcase name="cargo_lock_gitignored_if_lib2" classname="init" time="0" />
    <testcase name="cargo_lock_not_gitignored_if_bin1" classname="init" time="0" />
    <testcase name="confused_by_multiple_lib_files" classname="init" time="0" />
    <testcase name="cargo_lock_not_gitignored_if_bin2" classname="init" time="0" />
    <testcase name="git_autodetect" classname="init" time="0" />
    <testcase name="gitignore_added_newline_in_existing" classname="init" time="0" />
    <testcase name="gitignore_appended_not_replaced" classname="init" time="0" />
    <testcase name="gitignore_no_newline_in_new" classname="init" time="0" />
    <testcase name="invalid_dir_name" classname="init" time="0" />
    <testcase name="lib_already_exists_nosrc" classname="init" time="0" />
    <testcase name="lib_already_exists_src" classname="init" time="0" />
    <testcase name="mercurial_added_newline_in_existing" classname="init" time="0" />
    <testcase name="mercurial_autodetect" classname="init" time="0" />
    <testcase name="mercurial_no_newline_in_new" classname="init" time="0" />
    <testcase name="reserved_name" classname="init" time="0" />
    <testcase name="multibin_project_name_clash" classname="init" time="0" />
    <testcase name="simple_git" classname="init" time="0" />
    <testcase name="simple_git_ignore_exists" classname="init" time="0" />
    <testcase name="unknown_flags" classname="init" time="0" />
    <testcase name="with_argument" classname="init" time="0" />
    <testcase name="simple_lib" classname="init" time="0" />
    <testcase name="simple_bin" classname="init" time="0" />
    <testcase name="bad_paths" classname="install" time="0" />
    <testcase name="bad_version" classname="install" time="0" />
    <testcase name="update_with_shared_deps" classname="git" time="0" />
    <testcase name="compile_failure" classname="install" time="0" />
    <testcase name="do_not_rebuilds_on_local_install" classname="install" time="0" />
    <testcase name="dev_dependencies_no_check" classname="install" time="0" />
    <testcase name="dev_dependencies_lock_file_untouched" classname="install" time="0" />
    <testcase name="custom_target_dir_for_git_source" classname="install" time="0" />
    <testcase name="examples" classname="install" time="0" />
    <testcase name="install_empty_argument" classname="install" time="0" />
    <testcase name="git_repo" classname="install" time="0" />
    <testcase name="git_with_lockfile" classname="install" time="0" />
    <testcase name="git_repo_replace" classname="install" time="0" />
    <testcase name="install_force" classname="install" time="0" />
    <testcase name="install_force_bin" classname="install" time="0" />
    <testcase name="install_global_cargo_config" classname="install" time="0" />
    <testcase name="install_force_partial_overlap" classname="install" time="0" />
    <testcase name="install_ignores_local_cargo_config" classname="install" time="0" />
    <testcase name="install_target_foreign" classname="install" time="0" />
    <testcase name="install_path" classname="install" time="0" />
    <testcase name="install_twice" classname="install" time="0" />
    <testcase name="install_respects_lock_file" classname="install" time="0" />
    <testcase name="install_target_native" classname="install" time="0" />
    <testcase name="installs_from_cwd_with_2018_warnings" classname="install" time="0" />
    <testcase name="installs_from_cwd_by_default" classname="install" time="0" />
    <testcase name="installs_beta_version_by_explicit_name_from_git" classname="install" time="0" />
    <testcase name="legacy_version_requirement" classname="install" time="0" />
    <testcase name="install_location_precedence" classname="install" time="0" />
    <testcase name="missing" classname="install" time="0" />
    <testcase name="list_error" classname="install" time="0" />
    <testcase name="lock_file_path_deps_ok" classname="install" time="0" />
    <testcase name="multiple_crates_auto_binaries" classname="install" time="0" />
    <testcase name="multiple_crates_error" classname="install" time="0" />
    <testcase name="list" classname="install" time="0" />
    <testcase name="multiple_crates_auto_examples" classname="install" time="0" />
    <testcase name="no_binaries" classname="install" time="0" />
    <testcase name="no_binaries_or_examples" classname="install" time="0" />
    <testcase name="not_both_vers_and_version" classname="install" time="0" />
    <testcase name="multiple_crates_git_all" classname="install" time="0" />
    <testcase name="multiple_crates_select" classname="install" time="0" />
    <testcase name="pick_max_version" classname="install" time="0" />
    <testcase name="multiple_pkgs" classname="install" time="0" />
    <testcase name="q_silences_warnings" classname="install" time="0" />
    <testcase name="readonly_dir" classname="install" time="0" />
    <testcase name="test_install_git_cannot_be_a_base_url" classname="install" time="0" />
    <testcase name="simple" classname="install" time="0" />
    <testcase name="reports_unsuccessful_subcommand_result" classname="install" time="0" />
    <testcase name="uninstall_cwd_no_project" classname="install" time="0" />
    <testcase name="uninstall_cwd_not_installed" classname="install" time="0" />
    <testcase name="subcommand_works_out_of_the_box" classname="install" time="0" />
    <testcase name="uninstall_multiple_and_specifying_bin" classname="install" time="0" />
    <testcase name="uninstall_cwd" classname="install" time="0" />
    <testcase name="uninstall_pkg_does_not_exist" classname="install" time="0" />
    <testcase name="uninstall_bin_does_not_exist" classname="install" time="0" />
    <testcase name="uninstall_piecemeal" classname="install" time="0" />
    <testcase name="uninstall_multiple_and_some_pkg_does_not_exist" classname="install" time="0" />
    <testcase name="vers_precise" classname="install" time="0" />
    <testcase name="jobserver_and_j" classname="jobserver" time="0" />
    <testcase name="use_path_workspace" classname="install" time="0" />
    <testcase name="makes_jobserver_used" classname="jobserver" time="0" />
    <testcase name="workspace_uses_workspace_target_dir" classname="install" time="0" />
    <testcase name="version_too" classname="install" time="0" />
    <testcase name="bench_list_targets" classname="list_targets" time="0" />
    <testcase name="build_list_targets" classname="list_targets" time="0" />
    <testcase name="doc_list_targets" classname="list_targets" time="0" />
    <testcase name="check_list_targets" classname="list_targets" time="0" />
    <testcase name="install_list_targets" classname="list_targets" time="0" />
    <testcase name="run_list_targets" classname="list_targets" time="0" />
    <testcase name="jobserver_exists" classname="jobserver" time="0" />
    <testcase name="fix_list_targets" classname="list_targets" time="0" />
    <testcase name="rustc_list_targets" classname="list_targets" time="0" />
    <testcase name="rustdoc_list_targets" classname="list_targets" time="0" />
    <testcase name="test_list_targets" classname="list_targets" time="0" />
    <testcase name="invalid_dir_bad" classname="local_registry" time="0" />
    <testcase name="different_directory_replacing_the_registry_is_bad" classname="local_registry" time="0" />
    <testcase name="interdependent" classname="local_registry" time="0" />
    <testcase name="multiple_names" classname="local_registry" time="0" />
    <testcase name="crates_io_registry_url_is_optional" classname="local_registry" time="0" />
    <testcase name="multiple_versions" classname="local_registry" time="0" />
    <testcase name="path_dep_rewritten" classname="local_registry" time="0" />
    <testcase name="current_lockfile_format" classname="lockfile_compat" time="0" />
    <testcase name="listed_checksum_bad_if_we_cannot_compute" classname="lockfile_compat" time="0" />
    <testcase name="locked_correct_error" classname="lockfile_compat" time="0" />
    <testcase name="simple" classname="local_registry" time="0" />
    <testcase name="frozen_flag_preserves_old_lockfile" classname="lockfile_compat" time="0" />
    <testcase name="unlisted_checksum_is_bad_if_we_calculate" classname="lockfile_compat" time="0" />
    <testcase name="lockfile_without_root" classname="lockfile_compat" time="0" />
    <testcase name="totally_wild_checksums_works" classname="lockfile_compat" time="0" />
    <testcase name="wrong_checksum_is_an_error" classname="lockfile_compat" time="0" />
    <testcase name="login_with_new_credentials" classname="login" time="0" />
    <testcase name="oldest_lockfile_still_works" classname="lockfile_compat" time="0" />
    <testcase name="login_with_old_and_new_credentials" classname="login" time="0" />
    <testcase name="new_credentials_is_used_instead_old" classname="login" time="0" />
    <testcase name="login_with_old_credentials" classname="login" time="0" />
    <testcase name="login_without_credentials" classname="login" time="0" />
    <testcase name="toml_deserialize_manifest_error" classname="member_errors" time="0" />
    <testcase name="member_manifest_path_io_error" classname="member_errors" time="0" />
    <testcase name="registry_credentials" classname="login" time="0" />
    <testcase name="metabuild_error_both" classname="metabuild" time="0" />
    <testcase name="metabuild_build_plan" classname="metabuild" time="0" />
    <testcase name="metabuild_basic" classname="metabuild" time="0" />
    <testcase name="member_manifest_version_error" classname="member_errors" time="0" />
    <testcase name="metabuild_gated" classname="metabuild" time="0" />
    <testcase name="metabuild_failed_build_json" classname="metabuild" time="0" />
    <testcase name="metabuild_external_dependency" classname="metabuild" time="0" />
    <testcase name="metabuild_fresh" classname="metabuild" time="0" />
    <testcase name="metabuild_lib_name" classname="metabuild" time="0" />
    <testcase name="metabuild_json_artifact" classname="metabuild" time="0" />
    <testcase name="metabuild_metadata" classname="metabuild" time="0" />
    <testcase name="metabuild_missing_dep" classname="metabuild" time="0" />
    <testcase name="metabuild_override" classname="metabuild" time="0" />
    <testcase name="metabuild_links" classname="metabuild" time="0" />
    <testcase name="cargo_metadata_bad_version" classname="metadata" time="0" />
    <testcase name="cargo_metadata_no_deps_cwd" classname="metadata" time="0" />
    <testcase name="cargo_metadata_no_deps_path_to_cargo_toml_absolute" classname="metadata" time="0" />
    <testcase name="cargo_metadata_no_deps_path_to_cargo_toml_parent_absolute" classname="metadata" time="0" />
    <testcase name="cargo_metadata_no_deps_path_to_cargo_toml_parent_relative" classname="metadata" time="0" />
    <testcase name="metabuild_two_versions" classname="metabuild" time="0" />
    <testcase name="cargo_metadata_no_deps_path_to_cargo_toml_relative" classname="metadata" time="0" />
    <testcase name="cargo_metadata_simple" classname="metadata" time="0" />
    <testcase name="cargo_metadata_warns_on_implicit_version" classname="metadata" time="0" />
    <testcase name="metabuild_optional_dep" classname="metabuild" time="0" />
    <testcase name="cargo_metadata_with_invalid_manifest" classname="metadata" time="0" />
    <testcase name="metabuild_workspace" classname="metabuild" time="0" />
    <testcase name="example" classname="metadata" time="0" />
    <testcase name="cargo_metadata_path_to_cargo_toml_project" classname="metadata" time="0" />
    <testcase name="example_lib" classname="metadata" time="0" />
    <testcase name="library_with_features" classname="metadata" time="0" />
    <testcase name="library_with_several_crate_types" classname="metadata" time="0" />
    <testcase name="multiple_features" classname="metadata" time="0" />
    <testcase name="metadata_links" classname="metadata" time="0" />
    <testcase name="package_edition_2018" classname="metadata" time="0" />
    <testcase name="package_metadata" classname="metadata" time="0" />
    <testcase name="target_edition_2018" classname="metadata" time="0" />
    <testcase name="workspace_metadata" classname="metadata" time="0" />
    <testcase name="cargo_metadata_with_deps_and_version" classname="metadata" time="0" />
    <testcase name="workspace_metadata_no_deps" classname="metadata" time="0" />
    <testcase name="author_prefers_cargo" classname="new" time="0" />
    <testcase name="both_lib_and_bin" classname="new" time="0" />
    <testcase name="rename_dependency" classname="metadata" time="0" />
    <testcase name="existing" classname="new" time="0" />
    <testcase name="explicit_invalid_name_not_suggested" classname="new" time="0" />
    <testcase name="explicit_project_name" classname="new" time="0" />
    <testcase name="finds_author_email" classname="new" time="0" />
    <testcase name="finds_author_priority" classname="new" time="0" />
    <testcase name="finds_author_git" classname="new" time="0" />
    <testcase name="finds_author_user" classname="new" time="0" />
    <testcase name="finds_author_user_escaped" classname="new" time="0" />
    <testcase name="finds_author_username" classname="new" time="0" />
    <testcase name="finds_git_author" classname="new" time="0" />
    <testcase name="finds_git_email" classname="new" time="0" />
    <testcase name="git_prefers_command_line" classname="new" time="0" />
    <testcase name="invalid_characters" classname="new" time="0" />
    <testcase name="keyword_name" classname="new" time="0" />
    <testcase name="new_default_edition" classname="new" time="0" />
    <testcase name="new_with_bad_edition" classname="new" time="0" />
    <testcase name="new_with_edition_2015" classname="new" time="0" />
    <testcase name="finds_local_author_git" classname="new" time="0" />
    <testcase name="no_argument" classname="new" time="0" />
    <testcase name="new_with_edition_2018" classname="new" time="0" />
    <testcase name="reserved_binary_name" classname="new" time="0" />
    <testcase name="reserved_name" classname="new" time="0" />
    <testcase name="net_retry_loads_from_config" classname="net_config" time="0" />
    <testcase name="simple_git" classname="new" time="0" />
    <testcase name="strip_angle_bracket_author_email" classname="new" time="0" />
    <testcase name="simple_lib" classname="new" time="0" />
    <testcase name="simple_bin" classname="new" time="0" />
    <testcase name="net_retry_git_outputs_warning" classname="net_config" time="0" />
    <testcase name="subpackage_git_with_gitignore" classname="new" time="0" />
    <testcase name="subpackage_git_with_vcs_arg" classname="new" time="0" />
    <testcase name="unknown_flags" classname="new" time="0" />
    <testcase name="subpackage_no_git" classname="new" time="0" />
    <testcase name="binary_with_debug" classname="out_dir" time="0" />
    <testcase name="dynamic_library_with_debug" classname="out_dir" time="0" />
    <testcase name="include_only_the_binary_from_the_current_package" classname="out_dir" time="0" />
    <testcase name="avoid_build_scripts" classname="out_dir" time="0" />
    <testcase name="out_dir_is_a_file" classname="out_dir" time="0" />
    <testcase name="rlib_with_debug" classname="out_dir" time="0" />
    <testcase name="static_library_with_debug" classname="out_dir" time="0" />
    <testcase name="invalid_semver_version" classname="overrides" time="0" />
    <testcase name="different_version" classname="overrides" time="0" />
    <testcase name="missing_version" classname="overrides" time="0" />
    <testcase name="broken_path_override_warns" classname="overrides" time="0" />
    <testcase name="multiple_specs" classname="overrides" time="0" />
    <testcase name="replaces_artifacts" classname="out_dir" time="0" />
    <testcase name="locked_means_locked_yes_no_seriously_i_mean_locked" classname="overrides" time="0" />
    <testcase name="no_override_self" classname="overrides" time="0" />
    <testcase name="no_warnings_when_replace_is_used_in_another_workspace_member" classname="overrides" time="0" />
    <testcase name="override_plus_dep" classname="overrides" time="0" />
    <testcase name="override_adds_some_deps" classname="overrides" time="0" />
    <testcase name="override_an_override" classname="overrides" time="0" />
    <testcase name="override_simple" classname="overrides" time="0" />
    <testcase name="override_to_path_dep" classname="overrides" time="0" />
    <testcase name="override_wrong_version" classname="overrides" time="0" />
    <testcase name="override_with_nothing" classname="overrides" time="0" />
    <testcase name="override_wrong_name" classname="overrides" time="0" />
    <testcase name="paths_ok_with_optional" classname="overrides" time="0" />
    <testcase name="paths_add_optional_bad" classname="overrides" time="0" />
    <testcase name="overriding_nonexistent_no_spurious" classname="overrides" time="0" />
    <testcase name="override_with_default_feature" classname="overrides" time="0" />
    <testcase name="replace_registry_with_path" classname="overrides" time="0" />
    <testcase name="test_override_dep" classname="overrides" time="0" />
    <testcase name="persists_across_rebuilds" classname="overrides" time="0" />
    <testcase name="replace_to_path_dep" classname="overrides" time="0" />
    <testcase name="do_not_package_if_repository_is_dirty" classname="package" time="0" />
    <testcase name="update" classname="overrides" time="0" />
    <testcase name="edition_with_metadata" classname="package" time="0" />
    <testcase name="transitive" classname="overrides" time="0" />
    <testcase name="exclude" classname="package" time="0" />
    <testcase name="use_a_spec_to_select" classname="overrides" time="0" />
    <testcase name="ignore_workspace_specifier" classname="package" time="0" />
    <testcase name="do_not_package_if_src_was_modified" classname="package" time="0" />
    <testcase name="include" classname="package" time="0" />
    <testcase name="generated_manifest" classname="package" time="0" />
    <testcase name="lock_file_and_workspace" classname="package" time="0" />
    <testcase name="ignore_nested" classname="package" time="0" />
    <testcase name="no_duplicates_from_modified_tracked_files" classname="package" time="0" />
    <testcase name="no_lock_file_with_library" classname="package" time="0" />
    <testcase name="package_git_submodule" classname="package" time="0" />
    <testcase name="package_lockfile_git_repo" classname="package" time="0" />
    <testcase name="package_lib_with_bin" classname="package" time="0" />
    <testcase name="metadata_warning" classname="package" time="0" />
    <testcase name="package_no_default_features" classname="package" time="0" />
    <testcase name="package_two_kinds_of_deps" classname="package" time="0" />
    <testcase name="package_lockfile" classname="package" time="0" />
    <testcase name="package_with_all_features" classname="package" time="0" />
    <testcase name="package_verbose" classname="package" time="0" />
    <testcase name="path_dependency_no_version" classname="package" time="0" />
    <testcase name="package_with_select_features" classname="package" time="0" />
    <testcase name="package_verification" classname="package" time="0" />
    <testcase name="test_edition_malformed" classname="package" time="0" />
    <testcase name="test_edition" classname="package" time="0" />
    <testcase name="vcs_file_collision" classname="package" time="0" />
    <testcase name="repackage_on_source_change" classname="package" time="0" />
    <testcase name="simple" classname="package" time="0" />
    <testcase name="add_patch" classname="patch" time="0" />
    <testcase name="add_ignored_patch" classname="patch" time="0" />
    <testcase name="new_minor" classname="patch" time="0" />
    <testcase name="non_crates_io" classname="patch" time="0" />
    <testcase name="no_warn_ws_patch" classname="patch" time="0" />
    <testcase name="new_major" classname="patch" time="0" />
    <testcase name="nonexistent" classname="patch" time="0" />
    <testcase name="patch_depends_on_another_patch" classname="patch" time="0" />
    <testcase name="patch_git" classname="patch" time="0" />
    <testcase name="patch_in_virtual" classname="patch" time="0" />
    <testcase name="patch_to_git" classname="patch" time="0" />
    <testcase name="remove_patch" classname="patch" time="0" />
    <testcase name="replace" classname="patch" time="0" />
    <testcase name="replace_prerelease" classname="patch" time="0" />
    <testcase name="replace_with_crates_io" classname="patch" time="0" />
    <testcase name="transitive_new_major" classname="patch" time="0" />
    <testcase name="transitive_new_minor" classname="patch" time="0" />
    <testcase name="unused" classname="patch" time="0" />
    <testcase name="cargo_compile_with_root_dev_deps" classname="path" time="0" />
    <testcase name="unused_git" classname="patch" time="0" />
    <testcase name="cargo_compile_with_root_dev_deps_with_testing" classname="path" time="0" />
    <testcase name="cargo_compile_with_transitive_dev_deps" classname="path" time="0" />
    <testcase name="error_message_for_missing_manifest" classname="path" time="0" />
    <testcase name="custom_target_no_rebuild" classname="path" time="0" />
    <testcase name="missing_path_dependency" classname="path" time="0" />
    <testcase name="dev_deps_no_rebuild_lib" classname="path" time="0" />
    <testcase name="invalid_path_dep_in_workspace_with_lockfile" classname="path" time="0" />
    <testcase name="nested_deps_recompile" classname="path" time="0" />
    <testcase name="no_rebuild_two_deps" classname="path" time="0" />
    <testcase name="override_path_dep" classname="path" time="0" />
    <testcase name="override_and_depend" classname="path" time="0" />
    <testcase name="no_rebuild_dependency" classname="path" time="0" />
    <testcase name="override_relative" classname="path" time="0" />
    <testcase name="override_self" classname="path" time="0" />
    <testcase name="workspace_produces_rlib" classname="path" time="0" />
    <testcase name="deep_dependencies_trigger_rebuild" classname="path" time="0" />
    <testcase name="path_dep_build_cmd" classname="path" time="0" />
    <testcase name="panic_abort_plugins" classname="plugins" time="0" />
    <testcase name="native_plugin_dependency_with_custom_ar_linker" classname="plugins" time="0" />
    <testcase name="plugin_to_the_max" classname="plugins" time="0" />
    <testcase name="plugin_with_dynamic_native_dependency" classname="plugins" time="0" />
    <testcase name="shared_panic_abort_plugins" classname="plugins" time="0" />
    <testcase name="doctest_a_plugin" classname="plugins" time="0" />
    <testcase name="plugin_integration" classname="plugins" time="0" />
    <testcase name="plugin_and_proc_macro" classname="proc_macro" time="0" />
    <testcase name="thin_lto_works" classname="path" time="0" />
    <testcase name="noop" classname="proc_macro" time="0" />
    <testcase name="proc_macro_crate_type_multiple" classname="proc_macro" time="0" />
    <testcase name="impl_and_derive" classname="proc_macro" time="0" />
    <testcase name="proc_macro_crate_type_warning" classname="proc_macro" time="0" />
    <testcase name="probe_cfg_before_crate_type_discovery" classname="proc_macro" time="0" />
    <testcase name="proc_macro_crate_type_warning_plugin" classname="proc_macro" time="0" />
    <testcase name="profile_config_error_paths" classname="profile_config" time="0" />
    <testcase name="profile_config_all_options" classname="profile_config" time="0" />
    <testcase name="profile_config_gated" classname="profile_config" time="0" />
    <testcase name="profile_config_mixed_types" classname="profile_config" time="0" />
    <testcase name="profile_config_no_warn_unknown_override" classname="profile_config" time="0" />
    <testcase name="profile_config_override_spec_multiple" classname="profile_config" time="0" />
    <testcase name="profile_config_syntax_errors" classname="profile_config" time="0" />
    <testcase name="profile_config_validate_errors" classname="profile_config" time="0" />
    <testcase name="profile_config_override_precedence" classname="profile_config" time="0" />
    <testcase name="proc_macro_doctest" classname="proc_macro" time="0" />
    <testcase name="profile_config_validate_warnings" classname="profile_config" time="0" />
    <testcase name="proc_macro_crate_type" classname="proc_macro" time="0" />
    <testcase name="profile_override_dev_release_only" classname="profile_overrides" time="0" />
    <testcase name="profile_override_bad_settings" classname="profile_overrides" time="0" />
    <testcase name="profile_override_gated" classname="profile_overrides" time="0" />
    <testcase name="profile_override_spec_multiple" classname="profile_overrides" time="0" />
    <testcase name="profile_override_basic" classname="profile_overrides" time="0" />
    <testcase name="profile_override_spec" classname="profile_overrides" time="0" />
    <testcase name="profile_override_warnings" classname="profile_overrides" time="0" />
    <testcase name="profile_override_hierarchy" classname="profile_overrides" time="0" />
    <testcase name="profile_selection_build" classname="profile_targets" time="0" />
    <testcase name="profile_selection_build_all_targets" classname="profile_targets" time="0" />
    <testcase name="profile_selection_check_all_targets" classname="profile_targets" time="0" />
    <testcase name="profile_selection_check_all_targets_release" classname="profile_targets" time="0" />
    <testcase name="profile_selection_bench" classname="profile_targets" time="0" />
    <testcase name="profile_selection_check_all_targets_test" classname="profile_targets" time="0" />
    <testcase name="profile_selection_build_all_targets_release" classname="profile_targets" time="0" />
    <testcase name="profile_selection_build_release" classname="profile_targets" time="0" />
    <testcase name="debug_override_1" classname="profiles" time="0" />
    <testcase name="opt_level_override_0" classname="profiles" time="0" />
    <testcase name="opt_level_overrides" classname="profiles" time="0" />
    <testcase name="profile_doc_deprecated" classname="profiles" time="0" />
    <testcase name="profile_selection_test" classname="profile_targets" time="0" />
    <testcase name="profile_selection_test_release" classname="profile_targets" time="0" />
    <testcase name="profile_in_non_root_manifest_triggers_a_warning" classname="profiles" time="0" />
    <testcase name="profile_in_virtual_manifest_works" classname="profiles" time="0" />
    <testcase name="profile_overrides" classname="profiles" time="0" />
    <testcase name="profile_panic_test_bench" classname="profiles" time="0" />
    <testcase name="block_publish_feature_not_enabled" classname="publish" time="0" />
    <testcase name="profile_selection_doc" classname="profile_targets" time="0" />
    <testcase name="block_publish_no_registry" classname="publish" time="0" />
    <testcase name="top_level_overrides_deps" classname="profiles" time="0" />
    <testcase name="dont_publish_dirty" classname="publish" time="0" />
    <testcase name="git_deps" classname="publish" time="0" />
    <testcase name="new_crate_rejected" classname="publish" time="0" />
    <testcase name="old_token_location" classname="publish" time="0" />
    <testcase name="dry_run" classname="publish" time="0" />
    <testcase name="ignore_when_crate_ignored" classname="publish" time="0" />
    <testcase name="path_dependency_no_version" classname="publish" time="0" />
    <testcase name="publish_empty_list" classname="publish" time="0" />
    <testcase name="publish_allowed_registry" classname="publish" time="0" />
    <testcase name="publish_clean" classname="publish" time="0" />
    <testcase name="publish_in_sub_repo" classname="publish" time="0" />
    <testcase name="publish_when_ignored" classname="publish" time="0" />
    <testcase name="publish_with_all_features" classname="publish" time="0" />
    <testcase name="publish_with_no_default_features" classname="publish" time="0" />
    <testcase name="registry_not_in_publish_list" classname="publish" time="0" />
    <testcase name="simple" classname="publish" time="0" />
    <testcase name="simple_with_host" classname="publish" time="0" />
    <testcase name="simple_with_index_and_host" classname="publish" time="0" />
    <testcase name="cargo_read_manifest_cwd" classname="read_manifest" time="0" />
    <testcase name="publish_with_select_features" classname="publish" time="0" />
    <testcase name="unpublishable_crate" classname="publish" time="0" />
    <testcase name="cargo_read_manifest_path_to_cargo_toml_absolute" classname="read_manifest" time="0" />
    <testcase name="publish_with_patch" classname="publish" time="0" />
    <testcase name="cargo_read_manifest_path_to_cargo_toml_parent_relative" classname="read_manifest" time="0" />
    <testcase name="cargo_read_manifest_path_to_cargo_toml_parent_absolute" classname="read_manifest" time="0" />
    <testcase name="cargo_read_manifest_path_to_cargo_toml_relative" classname="read_manifest" time="0" />
    <testcase name="bad_cksum" classname="registry" time="0" />
    <testcase name="bad_and_or_malicious_packages_rejected" classname="registry" time="0" />
    <testcase name="bad_license_file" classname="registry" time="0" />
    <testcase name="add_dep_dont_update_registry" classname="registry" time="0" />
    <testcase name="bundled_crate_in_registry" classname="registry" time="0" />
    <testcase name="disallow_network" classname="registry" time="0" />
    <testcase name="bump_version_dont_update_registry" classname="registry" time="0" />
    <testcase name="deps" classname="registry" time="0" />
    <testcase name="fetch_downloads" classname="registry" time="0" />
    <testcase name="dev_dependency_not_used" classname="registry" time="0" />
    <testcase name="git_and_registry_dep" classname="registry" time="0" />
    <testcase name="lockfile_locks" classname="registry" time="0" />
    <testcase name="git_init_templatedir_missing" classname="registry" time="0" />
    <testcase name="login_with_no_cargo_dir" classname="registry" time="0" />
    <testcase name="login_with_differently_sized_token" classname="registry" time="0" />
    <testcase name="mis_hyphenated" classname="registry" time="0" />
    <testcase name="lockfile_locks_transitively" classname="registry" time="0" />
    <testcase name="nonexistent" classname="registry" time="0" />
    <testcase name="old_version_req" classname="registry" time="0" />
    <testcase name="old_version_req_upstream" classname="registry" time="0" />
    <testcase name="only_download_relevant" classname="registry" time="0" />
    <testcase name="package_with_path_deps" classname="registry" time="0" />
    <testcase name="relying_on_a_yank_is_bad" classname="registry" time="0" />
    <testcase name="resolve_and_backtracking" classname="registry" time="0" />
    <testcase name="toml_lies_but_index_is_truth" classname="registry" time="0" />
    <testcase name="update_backtracking_ok" classname="registry" time="0" />
    <testcase name="simple" classname="registry" time="0" />
    <testcase name="update_offline" classname="registry" time="0" />
    <testcase name="rename_deps_and_features" classname="registry" time="0" />
    <testcase name="update_registry" classname="registry" time="0" />
    <testcase name="update_multiple_packages" classname="registry" time="0" />
    <testcase name="update_same_prefix_oh_my_how_was_this_a_bug" classname="registry" time="0" />
    <testcase name="update_lockfile" classname="registry" time="0" />
    <testcase name="update_publish_then_update" classname="registry" time="0" />
    <testcase name="update_with_lockfile_if_packages_missing" classname="registry" time="0" />
    <testcase name="update_transitive_dependency" classname="registry" time="0" />
    <testcase name="upstream_warnings_on_extra_verbose" classname="registry" time="0" />
    <testcase name="updating_a_dep" classname="registry" time="0" />
    <testcase name="wrong_case" classname="registry" time="0" />
    <testcase name="use_semver" classname="registry" time="0" />
    <testcase name="vv_prints_warnings" classname="registry" time="0" />
    <testcase name="wrong_version" classname="registry" time="0" />
    <testcase name="features_not_working" classname="rename_deps" time="0" />
    <testcase name="yanks_are_not_used" classname="registry" time="0" />
    <testcase name="yanks_in_lockfiles_are_ok" classname="registry" time="0" />
    <testcase name="can_run_doc_tests" classname="rename_deps" time="0" />
    <testcase name="features_still_work" classname="rename_deps" time="0" />
    <testcase name="rename_and_patch" classname="rename_deps" time="0" />
    <testcase name="rename_affects_fingerprint" classname="rename_deps" time="0" />
    <testcase name="lots_of_names" classname="rename_deps" time="0" />
    <testcase name="rename_dependency" classname="rename_deps" time="0" />
    <testcase name="bench_arg_features" classname="required_features" time="0" />
    <testcase name="rename_twice" classname="rename_deps" time="0" />
    <testcase name="bench_default_features" classname="required_features" time="0" />
    <testcase name="rename_with_dash" classname="rename_deps" time="0" />
    <testcase name="bench_multiple_required_features" classname="required_features" time="0" />
    <testcase name="rename_with_different_names" classname="rename_deps" time="0" />
    <testcase name="build_bin_arg_features" classname="required_features" time="0" />
    <testcase name="build_example_arg_features" classname="required_features" time="0" />
    <testcase name="build_bin_default_features" classname="required_features" time="0" />
    <testcase name="build_bin_multiple_required_features" classname="required_features" time="0" />
    <testcase name="build_example_default_features" classname="required_features" time="0" />
    <testcase name="install_arg_features" classname="required_features" time="0" />
    <testcase name="build_example_multiple_required_features" classname="required_features" time="0" />
    <testcase name="install_multiple_required_features" classname="required_features" time="0" />
    <testcase name="dep_feature_in_toml" classname="required_features" time="0" />
    <testcase name="run_default_multiple_required_features" classname="required_features" time="0" />
    <testcase name="install_default_features" classname="required_features" time="0" />
    <testcase name="dep_feature_in_cmd_line" classname="required_features" time="0" />
    <testcase name="run_default" classname="required_features" time="0" />
    <testcase name="test_arg_features" classname="required_features" time="0" />
    <testcase name="conflict_store_bug" classname="resolve" time="0" />
    <testcase name="hard_equality" classname="resolve" time="0" />
    <testcase name="incomplete_information_skiping" classname="resolve" time="0" />
    <testcase name="incomplete_information_skiping_2" classname="resolve" time="0" />
    <testcase name="incomplete_information_skiping_3" classname="resolve" time="0" />
    <testcase name="test_default_features" classname="required_features" time="0" />
    <testcase name="test_multiple_required_features" classname="required_features" time="0" />
    <testcase name="test_skips_compiling_bin_with_missing_required_features" classname="required_features" time="0" />
    <testcase name="minimal_version_cli" classname="resolve" time="0" />
    <testcase name="large_conflict_cache" classname="resolve" time="0" />
    <testcase name="limited_independence_of_irrelevant_alternatives" classname="resolve" time="0" />
    <testcase name="resolving_allows_multiple_compatible_versions" classname="resolve" time="0" />
    <testcase name="resolving_backtrack" classname="resolve" time="0" />
    <testcase name="resolving_backtrack_features" classname="resolve" time="0" />
    <testcase name="resolving_but_no_exists" classname="resolve" time="0" />
    <testcase name="resolving_cycle" classname="resolve" time="0" />
    <testcase name="resolving_incompat_versions" classname="resolve" time="0" />
    <testcase name="resolving_mis_hyphenated_from_registry" classname="resolve" time="0" />
    <testcase name="passes_validation" classname="resolve" time="0" />
    <testcase name="resolving_with_constrained_sibling_backtrack_activation" classname="resolve" time="0" />
    <testcase name="resolving_with_constrained_sibling_backtrack_parent" classname="resolve" time="0" />
    <testcase name="resolving_with_constrained_sibling_transitive_dep_effects" classname="resolve" time="0" />
    <testcase name="resolving_with_deep_backtracking" classname="resolve" time="0" />
    <testcase name="resolving_with_deep_traps" classname="resolve" time="0" />
    <testcase name="minimum_version_errors_the_same" classname="resolve" time="0" />
    <testcase name="resolving_with_many_versions" classname="resolve" time="0" />
    <testcase name="resolving_with_specific_version" classname="resolve" time="0" />
    <testcase name="resolving_with_sys_crates" classname="resolve" time="0" />
    <testcase name="resolving_wrong_case_from_registry" classname="resolve" time="0" />
    <testcase name="test_dependency_with_empty_name" classname="resolve" time="0" />
    <testcase name="test_resolving_common_transitive_deps" classname="resolve" time="0" />
    <testcase name="test_resolving_empty_dependency_list" classname="resolve" time="0" />
    <testcase name="test_resolving_maximum_version_with_transitive_deps" classname="resolve" time="0" />
    <testcase name="test_resolving_minimum_version_with_transitive_deps" classname="resolve" time="0" />
    <testcase name="test_resolving_multiple_deps" classname="resolve" time="0" />
    <testcase name="test_resolving_one_dep" classname="resolve" time="0" />
    <testcase name="test_resolving_only_package" classname="resolve" time="0" />
    <testcase name="test_resolving_transitive_deps" classname="resolve" time="0" />
    <testcase name="test_resolving_with_dev_deps" classname="resolve" time="0" />
    <testcase name="test_resolving_with_same_name" classname="resolve" time="0" />
    <testcase name="autobins_disables" classname="run" time="0" />
    <testcase name="bogus_default_run" classname="run" time="0" />
    <testcase name="resolving_with_constrained_cousins_backtrack" classname="resolve" time="0" />
    <testcase name="default_run_unstable" classname="run" time="0" />
    <testcase name="default_run_workspace" classname="run" time="0" />
    <testcase name="dashes_are_forwarded" classname="run" time="0" />
    <testcase name="either_name_or_example" classname="run" time="0" />
    <testcase name="removing_a_dep_cant_brake" classname="resolve" time="0" />
    <testcase name="exit_code" classname="run" time="0" />
    <testcase name="exit_code_verbose" classname="run" time="0" />
    <testcase name="example_with_release_flag" classname="run" time="0" />
    <testcase name="explicit_bin_with_args" classname="run" time="0" />
    <testcase name="no_main_file" classname="run" time="0" />
    <testcase name="fail_no_extra_verbose" classname="run" time="0" />
    <testcase name="one_bin_multiple_examples" classname="run" time="0" />
    <testcase name="quiet_and_verbose_config" classname="run" time="0" />
    <testcase name="library_paths_sorted_alphabetically" classname="run" time="0" />
    <testcase name="release_works" classname="run" time="0" />
    <testcase name="run_bins" classname="run" time="0" />
    <testcase name="run_bin_different_name" classname="run" time="0" />
    <testcase name="run_bin_example" classname="run" time="0" />
    <testcase name="run_example_autodiscover_2015" classname="run" time="0" />
    <testcase name="run_example_autodiscover_2015_with_autoexamples_disabled" classname="run" time="0" />
    <testcase name="run_example_autodiscover_2015_with_autoexamples_enabled" classname="run" time="0" />
    <testcase name="run_example_autodiscover_2018" classname="run" time="0" />
    <testcase name="run_example" classname="run" time="0" />
    <testcase name="run_library_example" classname="run" time="0" />
    <testcase name="run_dylib_dep" classname="run" time="0" />
    <testcase name="run_with_filename" classname="run" time="0" />
    <testcase name="run_from_executable_folder" classname="run" time="0" />
    <testcase name="run_workspace" classname="run" time="0" />
    <testcase name="run_with_library_paths" classname="run" time="0" />
    <testcase name="run_multiple_packages" classname="run" time="0" />
    <testcase name="simple_quiet_and_verbose" classname="run" time="0" />
    <testcase name="simple" classname="run" time="0" />
    <testcase name="simple_quiet" classname="run" time="0" />
    <testcase name="simple_with_args" classname="run" time="0" />
    <testcase name="too_many_bins" classname="run" time="0" />
    <testcase name="specify_default_run" classname="run" time="0" />
    <testcase name="build_foo_with_bar_dependency" classname="rustc" time="0" />
    <testcase name="specify_name" classname="run" time="0" />
    <testcase name="build_lib_for_foo" classname="rustc" time="0" />
    <testcase name="build_only_bar_dependency" classname="rustc" time="0" />
    <testcase name="build_main_and_allow_unstable_options" classname="rustc" time="0" />
    <testcase name="fail_with_multiple_packages" classname="rustc" time="0" />
    <testcase name="fails_when_trying_to_build_main_and_lib_with_args" classname="rustc" time="0" />
    <testcase name="fails_with_args_to_all_binaries" classname="rustc" time="0" />
    <testcase name="build_with_args_to_one_of_multiple_binaries" classname="rustc" time="0" />
    <testcase name="build_with_args_to_one_of_multiple_tests" classname="rustc" time="0" />
    <testcase name="lib" classname="rustc" time="0" />
    <testcase name="rustc_fingerprint" classname="rustc" time="0" />
    <testcase name="rustc_test_with_implicit_bin" classname="rustc" time="0" />
    <testcase name="rustc_with_other_profile" classname="rustc" time="0" />
    <testcase name="targets_selected_all" classname="rustc" time="0" />
    <testcase name="targets_selected_default" classname="rustc" time="0" />
    <testcase name="features" classname="rustdoc" time="0" />
    <testcase name="rustdoc_args" classname="rustdoc" time="0" />
    <testcase name="rustc_info_cache" classname="rustc_info_cache" time="0" />
    <testcase name="rustdoc_foo_with_bar_dependency" classname="rustdoc" time="0" />
    <testcase name="rustdoc_only_bar_dependency" classname="rustdoc" time="0" />
    <testcase name="rustdoc_same_name_documents_lib" classname="rustdoc" time="0" />
    <testcase name="bad_flags" classname="rustdocflags" time="0" />
    <testcase name="rustdoc_simple" classname="rustdoc" time="0" />
    <testcase name="parses_config" classname="rustdocflags" time="0" />
    <testcase name="parses_env" classname="rustdocflags" time="0" />
    <testcase name="resolving_with_many_equivalent_backtracking" classname="resolve" time="0" />
    <testcase name="rustdocflags_passed_to_rustdoc_through_cargo_test_only_once" classname="rustdocflags" time="0" />
    <testcase name="build_rustflags_build_script" classname="rustflags" time="0" />
    <testcase name="rustdocflags_passed_to_rustdoc_through_cargo_test" classname="rustdocflags" time="0" />
    <testcase name="build_rustflags_build_script_dep" classname="rustflags" time="0" />
    <testcase name="build_rustflags_build_script_dep_with_target" classname="rustflags" time="0" />
    <testcase name="build_rustflags_no_recompile" classname="rustflags" time="0" />
    <testcase name="build_rustflags_build_script_with_target" classname="rustflags" time="0" />
    <testcase name="build_rustflags_plugin" classname="rustflags" time="0" />
    <testcase name="build_rustflags_plugin_dep" classname="rustflags" time="0" />
    <testcase name="build_rustflags_normal_source" classname="rustflags" time="0" />
    <testcase name="rerun" classname="rustdocflags" time="0" />
    <testcase name="build_rustflags_plugin_with_target" classname="rustflags" time="0" />
    <testcase name="build_rustflags_normal_source_with_target" classname="rustflags" time="0" />
    <testcase name="build_rustflags_plugin_dep_with_target" classname="rustflags" time="0" />
    <testcase name="build_rustflags_recompile" classname="rustflags" time="0" />
    <testcase name="build_rustflags_with_home_config" classname="rustflags" time="0" />
    <testcase name="build_rustflags_recompile2" classname="rustflags" time="0" />
    <testcase name="env_rustflags_build_script" classname="rustflags" time="0" />
    <testcase name="env_rustflags_build_script_dep" classname="rustflags" time="0" />
    <testcase name="cfg_rustflags_normal_source" classname="rustflags" time="0" />
    <testcase name="env_rustflags_build_script_dep_with_target" classname="rustflags" time="0" />
    <testcase name="env_rustflags_build_script_with_target" classname="rustflags" time="0" />
    <testcase name="cfg_rustflags_precedence" classname="rustflags" time="0" />
    <testcase name="env_rustflags_no_recompile" classname="rustflags" time="0" />
    <testcase name="env_rustflags_plugin" classname="rustflags" time="0" />
    <testcase name="env_rustflags_plugin_dep" classname="rustflags" time="0" />
    <testcase name="env_rustflags_plugin_dep_with_target" classname="rustflags" time="0" />
    <testcase name="env_rustflags_normal_source" classname="rustflags" time="0" />
    <testcase name="env_rustflags_plugin_with_target" classname="rustflags" time="0" />
    <testcase name="env_rustflags_normal_source_with_target" classname="rustflags" time="0" />
    <testcase name="env_rustflags_recompile" classname="rustflags" time="0" />
    <testcase name="env_rustflags_recompile2" classname="rustflags" time="0" />
    <testcase name="target_rustflags_string_and_array_form1" classname="rustflags" time="0" />
    <testcase name="target_rustflags_string_and_array_form2" classname="rustflags" time="0" />
    <testcase name="help" classname="search" time="0" />
    <testcase name="target_rustflags_normal_source" classname="rustflags" time="0" />
    <testcase name="multiple_query_params" classname="search" time="0" />
    <testcase name="target_rustflags_precedence" classname="rustflags" time="0" />
    <testcase name="not_update" classname="search" time="0" />
    <testcase name="replace_default" classname="search" time="0" />
    <testcase name="two_matching_in_config" classname="rustflags" time="0" />
    <testcase name="simple" classname="search" time="0" />
    <testcase name="small_fd_limits::avoid_using_git" time="0">
      <skipped />
    </testcase>
    <testcase name="simple_with_index_and_host" classname="search" time="0" />
    <testcase name="lines_match_works" classname="support" time="0" />
    <testcase name="meta_test_deep_pretty_print_registry" classname="support::resolver" time="0" />
    <testcase name="simple_with_host" classname="search" time="0" />
    <testcase name="features_are_quoted" classname="shell_quoting" time="0" />
    <testcase name="almost_cyclic_but_not_quite" classname="test" time="0" />
    <testcase name="meta_test_deep_trees_from_strategy" classname="support::resolver" time="0" />
    <testcase name="bench_without_name" classname="test" time="0" />
    <testcase name="bad_example" classname="test" time="0" />
    <testcase name="bin_is_preserved" classname="test" time="0" />
    <testcase name="bin_does_not_rebuild_tests" classname="test" time="0" />
    <testcase name="bin_without_name" classname="test" time="0" />
    <testcase name="meta_test_multiple_versions_strategy" classname="support::resolver" time="0" />
    <testcase name="bin_there_for_integration" classname="test" time="0" />
    <testcase name="use_git_gc" classname="small_fd_limits" time="0" />
    <testcase name="cargo_test_env" classname="test" time="0" />
    <testcase name="build_then_selective_test" classname="test" time="0" />
    <testcase name="cargo_test_failing_test_in_lib" classname="test" time="0" />
    <testcase name="cargo_test_overflow_checks" classname="test" time="0" />
    <testcase name="cargo_test_failing_test_in_bin" classname="test" time="0" />
    <testcase name="can_not_mix_doc_tests_and_regular_tests" classname="test" time="0" />
    <testcase name="cargo_test_failing_test_in_test" classname="test" time="0" />
    <testcase name="cargo_test_simple" classname="test" time="0" />
    <testcase name="cargo_test_release" classname="test" time="0" />
    <testcase name="cargo_test_verbose" classname="test" time="0" />
    <testcase name="cargo_test_twice" classname="test" time="0" />
    <testcase name="cfg_test_even_with_no_harness" classname="test" time="0" />
    <testcase name="cyclic_dev" classname="test" time="0" />
    <testcase name="dashes_to_underscores" classname="test" time="0" />
    <testcase name="dev_dep_with_build_script" classname="test" time="0" />
    <testcase name="cyclic_dev_dep_doc_test" classname="test" time="0" />
    <testcase name="doctest_only_with_dev_dep" classname="test" time="0" />
    <testcase name="doctest_dev_dep" classname="test" time="0" />
    <testcase name="doctest_feature" classname="test" time="0" />
    <testcase name="doctest_and_registry" classname="test" time="0" />
    <testcase name="dylib_doctest2" classname="test" time="0" />
    <testcase name="doctest_skip_staticlib" classname="test" time="0" />
    <testcase name="dont_run_examples" classname="test" time="0" />
    <testcase name="dylib_doctest" classname="test" time="0" />
    <testcase name="example_without_name" classname="test" time="0" />
    <testcase name="example_bin_same_name" classname="test" time="0" />
    <testcase name="example_with_dev_dep" classname="test" time="0" />
    <testcase name="example_dev_dep" classname="test" time="0" />
    <testcase name="external_test_explicit" classname="test" time="0" />
    <testcase name="external_test_implicit" classname="test" time="0" />
    <testcase name="external_test_named_test" classname="test" time="0" />
    <testcase name="filter_no_doc_tests" classname="test" time="0" />
    <testcase name="json_artifact_includes_executable_for_integration_tests" classname="test" time="0" />
    <testcase name="json_artifact_includes_executable_for_library_tests" classname="test" time="0" />
    <testcase name="json_artifact_includes_test_flag" classname="test" time="0" />
    <testcase name="lib_bin_same_name" classname="test" time="0" />
    <testcase name="lib_with_standard_name2" classname="test" time="0" />
    <testcase name="find_dependency_of_proc_macro_dependency_with_target" classname="test" time="0" />
    <testcase name="lib_with_standard_name" classname="test" time="0" />
    <testcase name="lib_without_name" classname="test" time="0" />
    <testcase name="many_similar_names" classname="test" time="0" />
    <testcase name="only_test_docs" classname="test" time="0" />
    <testcase name="no_fail_fast" classname="test" time="0" />
    <testcase name="panic_abort_multiple" classname="test" time="0" />
    <testcase name="selective_test_optional_dep" classname="test" time="0" />
    <testcase name="pass_correct_cfgs_flags_to_rustdoc" classname="test" time="0" />
    <testcase name="pass_through_command_line" classname="test" time="0" />
    <testcase name="selective_test_wonky_profile" classname="test" time="0" />
    <testcase name="publish_a_crate_without_tests" classname="test" time="0" />
    <testcase name="selective_testing_with_docs" classname="test" time="0" />
    <testcase name="test_all_exclude" classname="test" time="0" />
    <testcase name="test_all_targets_lib" classname="test" time="0" />
    <testcase name="selective_testing" classname="test" time="0" />
    <testcase name="test_all_member_dependency_same_name" classname="test" time="0" />
    <testcase name="test_dep_with_dev" classname="test" time="0" />
    <testcase name="test_all_virtual_manifest" classname="test" time="0" />
    <testcase name="test_all_workspace" classname="test" time="0" />
    <testcase name="test_build_script_links" classname="test" time="0" />
    <testcase name="test_hint_workspace" classname="test" time="0" />
    <testcase name="test_dylib" classname="test" time="0" />
    <testcase name="test_hint_not_masked_by_doctest" classname="test" time="0" />
    <testcase name="test_many_targets" classname="test" time="0" />
    <testcase name="test_many_with_features" classname="test" time="0" />
    <testcase name="test_multiple_packages" classname="test" time="0" />
    <testcase name="test_no_harness" classname="test" time="0" />
    <testcase name="test_no_run" classname="test" time="0" />
    <testcase name="test_panic_abort_with_dep" classname="test" time="0" />
    <testcase name="test_order" classname="test" time="0" />
    <testcase name="test_run_implicit_bench_target" classname="test" time="0" />
    <testcase name="test_run_implicit_bin_target" classname="test" time="0" />
    <testcase name="test_release_ignore_panic" classname="test" time="0" />
    <testcase name="test_run_specific_bin_target" classname="test" time="0" />
    <testcase name="test_run_implicit_test_target" classname="test" time="0" />
    <testcase name="test_run_specific_test_target" classname="test" time="0" />
    <testcase name="test_then_build" classname="test" time="0" />
    <testcase name="test_virtual_manifest_all_implied" classname="test" time="0" />
    <testcase name="test_run_implicit_example_target" classname="test" time="0" />
    <testcase name="test_twice_with_build_cmd" classname="test" time="0" />
    <testcase name="test_without_name" classname="test" time="0" />
    <testcase name="test_with_example_twice" classname="test" time="0" />
    <testcase name="absolute_tools" classname="tool_paths" time="0" />
    <testcase name="test_with_deep_lib_dep" classname="test" time="0" />
    <testcase name="custom_runner_cfg_collision" classname="tool_paths" time="0" />
    <testcase name="custom_runner_cfg" classname="tool_paths" time="0" />
    <testcase name="test_with_lib_dep" classname="test" time="0" />
    <testcase name="pathless_tools" classname="tool_paths" time="0" />
    <testcase name="custom_runner_cfg_precedence" classname="tool_paths" time="0" />
    <testcase name="relative_tools" classname="tool_paths" time="0" />
    <testcase name="custom_runner" classname="tool_paths" time="0" />
    <testcase name="change_package_version" classname="update" time="0" />
    <testcase name="add_dep_deep_new_requirement" classname="update" time="0" />
    <testcase name="conservative" classname="update" time="0" />
    <testcase name="preserve_top_comment" classname="update" time="0" />
    <testcase name="dry_run_update" classname="update" time="0" />
    <testcase name="everything_real_deep" classname="update" time="0" />
    <testcase name="minor_update_two_places" classname="update" time="0" />
    <testcase name="update_precise" classname="update" time="0" />
    <testcase name="transitive_minor_update" classname="update" time="0" />
    <testcase name="cargo_verify_project_cwd" classname="verify_project" time="0" />
    <testcase name="cargo_verify_project_path_to_cargo_toml_absolute" classname="verify_project" time="0" />
    <testcase name="cargo_verify_project_honours_unstable_features" classname="verify_project" time="0" />
    <testcase name="cargo_verify_project_path_to_cargo_toml_relative" classname="verify_project" time="0" />
    <testcase name="version_works_with_bad_config" classname="version" time="0" />
    <testcase name="version_works_with_bad_target_dir" classname="version" time="0" />
    <testcase name="version::version_works_without_rustc" time="0">
      <skipped />
    </testcase>
    <testcase name="simple" classname="version" time="0" />
    <testcase name="update_via_new_dep" classname="update" time="0" />
    <testcase name="update_via_new_member" classname="update" time="0" />
    <testcase name="no_warning_on_bin_failure" classname="warn_on_failure" time="0" />
    <testcase name="warning_on_lib_failure" classname="warn_on_failure" time="0" />
    <testcase name="cycle" classname="workspaces" time="0" />
    <testcase name="dangling_member" classname="workspaces" time="0" />
    <testcase name="no_warning_on_success" classname="warn_on_failure" time="0" />
    <testcase name="cargo_home_at_root_works" classname="workspaces" time="0" />
    <testcase name="bare_workspace_ok" classname="workspaces" time="0" />
    <testcase name="error_if_parent_cargo_toml_is_invalid" classname="workspaces" time="0" />
    <testcase name="dont_recurse_out_of_cargo_home" classname="workspaces" time="0" />
    <testcase name="exclude_members_preferred" classname="workspaces" time="0" />
    <testcase name="dep_used_with_separate_features" classname="workspaces" time="0" />
    <testcase name="exclude_but_also_depend" classname="workspaces" time="0" />
    <testcase name="explicit_package_argument_works_with_virtual_manifest" classname="workspaces" time="0" />
    <testcase name="glob_syntax_invalid_members" classname="workspaces" time="0" />
    <testcase name="excluded_simple" classname="workspaces" time="0" />
    <testcase name="include_virtual" classname="workspaces" time="0" />
    <testcase name="fetch_fetches_all" classname="workspaces" time="0" />
    <testcase name="invalid_members" classname="workspaces" time="0" />
    <testcase name="invalid_parent_pointer" classname="workspaces" time="0" />
    <testcase name="inferred_root" classname="workspaces" time="0" />
    <testcase name="inferred_path_dep" classname="workspaces" time="0" />
    <testcase name="lock_doesnt_change_depending_on_crate" classname="workspaces" time="0" />
    <testcase name="glob_syntax" classname="workspaces" time="0" />
    <testcase name="new_warns_you_this_will_not_work" classname="workspaces" time="0" />
    <testcase name="lockfile_can_specify_nonexistant_members" classname="workspaces" time="0" />
    <testcase name="parent_doesnt_point_to_child" classname="workspaces" time="0" />
    <testcase name="path_dep_outside_workspace_is_not_member" classname="workspaces" time="0" />
    <testcase name="members_include_path_deps" classname="workspaces" time="0" />
    <testcase name="lock_works_for_everyone" classname="workspaces" time="0" />
    <testcase name="parent_pointer_works" classname="workspaces" time="0" />
    <testcase name="relative_path_for_root_works" classname="workspaces" time="0" />
    <testcase name="same_names_in_workspace" classname="workspaces" time="0" />
    <testcase name="relative_path_for_member_works" classname="workspaces" time="0" />
    <testcase name="rebuild_please" classname="workspaces" time="0" />
    <testcase name="simple_explicit" classname="workspaces" time="0" />
    <testcase name="relative_rustc" classname="workspaces" time="0" />
    <testcase name="share_dependencies" classname="workspaces" time="0" />
    <testcase name="simple_explicit_default_members" classname="workspaces" time="0" />
    <testcase name="two_roots" classname="workspaces" time="0" />
    <testcase name="test_path_dependency_under_member" classname="workspaces" time="0" />
    <testcase name="virtual_build_no_members" classname="workspaces" time="0" />
    <testcase name="virtual_default_member_is_not_a_member" classname="workspaces" time="0" />
    <testcase name="virtual_build_all_implied" classname="workspaces" time="0" />
    <testcase name="test_in_and_out_of_workspace" classname="workspaces" time="0" />
    <testcase name="virtual_misconfigure" classname="workspaces" time="0" />
    <testcase name="virtual_default_members" classname="workspaces" time="0" />
    <testcase name="workspace_isnt_root" classname="workspaces" time="0" />
    <testcase name="transitive_path_dep" classname="workspaces" time="0" />
    <testcase name="virtual_works" classname="workspaces" time="0" />
    <testcase name="ws_rustc_err" classname="workspaces" time="0" />
    <testcase name="workspace_in_git" classname="workspaces" time="0" />
    <testcase name="ws_err_unused" classname="workspaces" time="0" />
    <testcase name="you_cannot_generate_lockfile_for_empty_workspaces" classname="workspaces" time="0" />
    <testcase name="ws_warn_path" classname="workspaces" time="0" />
    <testcase name="workspace_with_transitive_dev_deps" classname="workspaces" time="0" />
    <testcase name="ws_warn_unused" classname="workspaces" time="0" />
  </testsuite>
</testsuites>